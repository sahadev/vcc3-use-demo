{"version":3,"file":"hue-slider.vue_vue_type_script_lang.mjs","sources":["../../../../../../../packages/components/color-picker/src/components/hue-slider.vue"],"sourcesContent":["<template>\n  <div class=\"el-color-hue-slider\" :class=\"{ 'is-vertical': vertical }\">\n    <div ref=\"bar\" class=\"el-color-hue-slider__bar\" @click=\"handleClick\"></div>\n    <div\n      ref=\"thumb\"\n      class=\"el-color-hue-slider__thumb\"\n      :style=\"{\n        left: thumbLeft + 'px',\n        top: thumbTop + 'px',\n      }\"\n    ></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ref,\n  computed,\n  watch,\n  onMounted,\n  getCurrentInstance,\n  defineComponent,\n} from 'vue'\nimport { getClientXY } from '@element-plus/utils/dom'\nimport draggable from '../draggable'\n\nimport type { PropType } from 'vue'\nimport type Color from '../color'\n\nexport default defineComponent({\n  name: 'ElColorHueSlider',\n\n  props: {\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n\n    vertical: Boolean,\n  },\n  setup(props) {\n    const instance = getCurrentInstance()\n    // ref\n    const thumb = ref<HTMLElement | null>(null)\n    const bar = ref<HTMLElement | null>(null)\n    // data\n    const thumbLeft = ref(0)\n    const thumbTop = ref(0)\n    // computed\n    const hueValue = computed(() => {\n      return props.color.get('hue')\n    })\n    // watch\n    watch(\n      () => hueValue.value,\n      () => {\n        update()\n      }\n    )\n\n    // methods\n    function handleClick(event: Event) {\n      const target = event.target\n\n      if (target !== thumb.value) {\n        handleDrag(event)\n      }\n    }\n\n    function handleDrag(event) {\n      const el = instance.vnode.el as HTMLElement\n      const rect = el.getBoundingClientRect()\n      const { clientX, clientY } = getClientXY(event)\n      let hue\n\n      if (!props.vertical) {\n        let left = clientX - rect.left\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n        left = Math.max(thumb.value.offsetWidth / 2, left)\n\n        hue = Math.round(\n          ((left - thumb.value.offsetWidth / 2) /\n            (rect.width - thumb.value.offsetWidth)) *\n            360\n        )\n      } else {\n        let top = clientY - rect.top\n\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n        top = Math.max(thumb.value.offsetHeight / 2, top)\n        hue = Math.round(\n          ((top - thumb.value.offsetHeight / 2) /\n            (rect.height - thumb.value.offsetHeight)) *\n            360\n        )\n      }\n      props.color.set('hue', hue)\n    }\n\n    function getThumbLeft() {\n      const el = instance.vnode.el\n\n      if (props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 360\n      )\n    }\n\n    function getThumbTop() {\n      const el = instance.vnode.el as HTMLElement\n      if (!props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 360\n      )\n    }\n\n    function update() {\n      thumbLeft.value = getThumbLeft()\n      thumbTop.value = getThumbTop()\n    }\n\n    // mounded\n    onMounted(() => {\n      const dragConfig = {\n        drag: (event) => {\n          handleDrag(event)\n        },\n        end: (event) => {\n          handleDrag(event)\n        },\n      }\n\n      draggable(bar.value, dragConfig)\n      draggable(thumb.value, dragConfig)\n      update()\n    })\n\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n    }\n  },\n})\n</script>\n"],"names":[],"mappings":";;;;AAwBA,aAAe,eAAe,CAAC;;AAE/B,EAAE,KAAK,EAAE;AACT,IAAI,KAAK;;AAET,gBAAgB,IAAI;KACf;;GAEF;OACI,CAAC;UACE;UACA,QAAQ;IACd;;IAEA,MAAM,QAAQ,GAAG;;MAEf,OAAO;KACR,CAAC,CAAC;IACH,KAAK;MACH,MAAM,EAAE;KACT,CAAC,CAAC;IACH;MACE,MAAM,MAAM,QAAQ,CAAC;MACrB,IAAI,MAAM,KAAK,KAAK;QAClB;OACD;;IAEH;;MAEE;MACA,MAAM,EAAE,OAAO,EAAE;MACjB,IAAI;UACA,CAAC;;;;QAIH,GAAG;OACJ,MAAM;QACL,IAAI,GAAG,UAAU,GAAG,IAAI;;WAErB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK;QAC1B,GAAG,GAAG,IAAI,CAAC,KAAK;;;;IAIpB,SAAS,YAAY,GAAG;MACtB,MAAM,KAAK,QAAQ,CAAC,KAAK,CAAC,GAAG;MAC7B,IAAI,KAAK,SAAS;QAChB,OAAO,CAAC,CAAC;MACX,MAAM;;eAEG,CAAC,CAAC;aACJ,IAAI,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC;;aAErB,WAAW,GAAG;;UAEjB,MAAM,CAAC;eACF,EAAE;YACL,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAC5B;QACL;MACF,OAAO;;;eAGE,CAAC,KAAK,GAAG,YAAY,EAAE;cACxB,CAAC,KAAK,GAAG,WAAW,EAAE,CAAC;;aAExB,CAAC,MAAM;YACR,UAAU,GAAG;YACb,EAAE;;;QAGN,GAAG,EAAE,CAAC,KAAK,KAAK;;;OAGjB,CAAC;MACF,SAAS,IAAI,CAAC,KAAK,EAAE;;MAErB,MAAM,EAAE,CAAC;MACT,CAAC;;MAED,GAAG;MACH,KAAK;eACI;MACT;;;MAGA;MACA;;;;;;"}