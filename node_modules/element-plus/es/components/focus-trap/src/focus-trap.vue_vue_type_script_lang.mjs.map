{"version":3,"file":"focus-trap.vue_vue_type_script_lang.mjs","sources":["../../../../../../packages/components/focus-trap/src/focus-trap.vue"],"sourcesContent":["<template>\n  <slot />\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  onMounted,\n  onBeforeUnmount,\n  provide,\n  unref,\n  watch,\n} from 'vue'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { on, off } from '@element-plus/utils/dom'\nimport {\n  focusableStack,\n  focusFirstDescendant,\n  getEdges,\n  tryFocus,\n  obtainAllFocusableElements,\n} from './utils'\nimport {\n  FOCUS_TRAP_INJECTION_KEY,\n  FOCUS_ON_MOUNT,\n  FOCUS_ON_MOUNT_OPTS,\n  ON_MOUNT_FOCUS_EVT,\n  ON_UNMOUNT_FOCUS_EVT,\n  FOCUS_ON_UNMOUNT,\n} from './tokens'\n\nimport type { FocusLayer } from './utils'\n\nexport default defineComponent({\n  name: 'ElFocusTrap',\n  inheritAttrs: false,\n  props: {\n    loop: Boolean,\n    trapped: Boolean,\n  },\n  emits: [ON_MOUNT_FOCUS_EVT, ON_UNMOUNT_FOCUS_EVT],\n  setup(props, { emit }) {\n    const focusTrapRef = ref<HTMLElement | null>()\n    const forwardRef = ref<HTMLElement | null>(null)\n    let lastFocusBeforeMounted: HTMLElement | null\n    let lastFocusAfterMounted: HTMLElement | null\n\n    const focusLayer: FocusLayer = {\n      paused: false,\n      pause() {\n        this.paused = true\n      },\n      resume() {\n        this.paused = false\n      },\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      if (!props.loop && !props.trapped) return\n      if (focusLayer.paused) return\n\n      const { key, altKey, ctrlKey, metaKey, currentTarget, shiftKey } = e\n      const { loop } = props\n      const isTabbing =\n        key === EVENT_CODE.tab && !altKey && !ctrlKey && !metaKey\n\n      const currentFocusingEl = document.activeElement\n      if (isTabbing && currentFocusingEl) {\n        const container = currentTarget as HTMLElement\n        const [first, last] = getEdges(container)\n        const isTabbable = first && last\n\n        if (!isTabbable) {\n          if (currentFocusingEl === container) e.preventDefault()\n        } else {\n          if (!shiftKey && currentFocusingEl === last) {\n            e.preventDefault()\n            if (loop) tryFocus(first, true)\n          } else if (shiftKey && currentFocusingEl === first) {\n            e.preventDefault()\n            if (loop) tryFocus(last, true)\n          }\n        }\n      }\n    }\n\n    provide(FOCUS_TRAP_INJECTION_KEY, {\n      focusTrapRef: forwardRef,\n      onKeydown,\n    })\n\n    const focusOnMount = (e: Event) => {\n      emit(ON_MOUNT_FOCUS_EVT, e)\n    }\n    const focusOnUnmount = (e: Event) => emit(ON_UNMOUNT_FOCUS_EVT, e)\n    const onFocusIn = (e: Event) => {\n      const trapContainer = unref(forwardRef)\n      if (focusLayer.paused || !trapContainer) return\n      const target = e.target as HTMLElement | null\n      if (target && trapContainer.contains(target)) {\n        lastFocusAfterMounted = target\n      } else {\n        tryFocus(lastFocusAfterMounted, true)\n      }\n    }\n\n    const onFocusOut = (e: Event) => {\n      const trapContainer = unref(forwardRef)\n      if (focusLayer.paused || !trapContainer) return\n\n      if (\n        !trapContainer.contains(\n          (e as FocusEvent).relatedTarget as HTMLElement | null\n        )\n      ) {\n        tryFocus(lastFocusAfterMounted, true)\n      }\n    }\n\n    onMounted(() => {\n      const trapContainer = unref(forwardRef)\n      if (trapContainer) {\n        focusableStack.push(focusLayer)\n        const prevFocusedElement = document.activeElement\n        lastFocusBeforeMounted = prevFocusedElement as HTMLElement | null\n        const isPrevFocusContained = trapContainer.contains(prevFocusedElement)\n        if (!isPrevFocusContained) {\n          const mountEvent = new Event(FOCUS_ON_MOUNT, FOCUS_ON_MOUNT_OPTS)\n          on(trapContainer, FOCUS_ON_MOUNT, focusOnMount)\n          trapContainer.dispatchEvent(mountEvent)\n          if (!mountEvent.defaultPrevented) {\n            focusFirstDescendant(\n              obtainAllFocusableElements(trapContainer),\n              true\n            )\n            if (document.activeElement === prevFocusedElement) {\n              tryFocus(trapContainer)\n            }\n          }\n        }\n      }\n\n      watch(\n        () => props.trapped,\n        (trapped) => {\n          if (trapped) {\n            on(document, 'focusin', onFocusIn)\n            on(document, 'focusout', onFocusOut)\n          } else {\n            off(document, 'focusin', onFocusIn)\n            off(document, 'focusout', onFocusOut)\n          }\n        },\n        { immediate: true }\n      )\n    })\n\n    onBeforeUnmount(() => {\n      const trapContainer = unref(forwardRef)\n\n      if (trapContainer) {\n        off(trapContainer, FOCUS_ON_MOUNT, focusOnMount)\n        const unmountEvent = new Event(FOCUS_ON_UNMOUNT, FOCUS_ON_MOUNT_OPTS)\n\n        on(trapContainer, FOCUS_ON_UNMOUNT, focusOnUnmount)\n        trapContainer.dispatchEvent(unmountEvent)\n\n        if (!unmountEvent.defaultPrevented) {\n          tryFocus(lastFocusBeforeMounted ?? document.body, true)\n        }\n\n        off(trapContainer, FOCUS_ON_UNMOUNT, focusOnUnmount)\n\n        focusableStack.remove(focusLayer)\n      }\n    })\n\n    return {\n      focusTrapRef,\n      forwardRef,\n      onKeydown,\n    }\n  },\n})\n</script>\n"],"names":[],"mappings":";;;;;;AA6BA,aAAe;;AAEf,EAAE,YAAY,EAAE,KAAK;;AAErB,IAAI,IAAI,EAAE,OAAO;IACb,OAAO,EAAE,OAAO;GACjB;EACD,KAAK,EAAE;OACF,CAAC,KAAK,EAAE,EAAE;IACb,MAAM;;IAEN,0BAA0B,CAAC;IAC3B,IAAI;IACJ,MAAM,UAAU,GAAG;MACjB,MAAM,EAAE,KAAK;MACb,KAAK,GAAG;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;MAErB,MAAM,GAAG;QACP,IAAI,OAAO;OACZ;;;MAGD,IAAI,CAAC;QACH,OAAO;MACT;;;MAGA,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;MACvB,MAAM,eAAe,KAAK,UAAU,CAAC,GAAG;MACxC,MAAM,iBAAiB,GAAG;;QAExB,MAAM,SAAS,gBAAgB,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC;QACnB,MAAM;QACN,IAAI,CAAC,UAAU,EAAE;;YAEb,CAAC,CAAC,cAAc,EAAE;SACrB,MAAM;UACL,IAAI,CAAC,YAAY,iBAAiB,KAAK,IAAI;YACzC,EAAE,cAAc,EAAE,CAAC;YACnB,IAAI,IAAI;;WAET,MAAM,IAAI;aACR,CAAC,cAAc,EAAE;YAClB;cACE,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAC;;;;;YAKvB,0BAA0B;;;MAGhC;IACF;;KAEC,CAAC;UACI,cAAc,GAAG,CAAC,CAAC;UACnB;;;QAGF,OAAO;MACT,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM;;QAErB,qBAAqB,GAAG,MAAM,CAAC;OAChC,MAAM;QACL,QAAQ,CAAC,qBAAqB,EAAE,IAAI;OACrC;MACD;UACI,UAAU,GAAG,CAAC,CAAC,KAAK;YAClB,aAAa,GAAG,KAAK,CAAC;MAC5B,IAAI;QACF,OAAO;MACT;;;KAGD,CAAC;aACO,CAAC,MAAM;MACd,MAAM,aAAa,GAAG,KAAK,CAAC,UAAU,CAAC;;;QAGrC,MAAM;8BACgB,GAAG,kBAAkB,CAAC;QAC5C;QACA;UACE,MAAM,UAAU,GAAG,IAAI,KAAK;;;;YAI1B;YACA,IAAI,QAAQ,cAAc,KAAK;cAC7B,QAAQ,CAAC;aACV;WACF;SACF;;WAEE,CAAC,MAAM,KAAK,CAAC,OAAO,EAAE;YACrB,OAAO,EAAE;UACX,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC;UACnC,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;eAChC;aACF,CAAC,QAAQ,EAAE;cACV,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;;;;mBAI7B,CAAC,MAAM;YACd;UACF;QACF;;;QAGA;QACA,IAAI,aAAa,CAAC;UAChB,QAAQ,CAAC;;YAEP,aAAa,EAAE,gBAAgB,EAAE;sBACvB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;;;;;;eAM3B;MACT;;;;;;"}