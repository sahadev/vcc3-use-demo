{"version":3,"file":"menu-item-group.vue_vue_type_script_lang.mjs","sources":["../../../../../../packages/components/menu/src/menu-item-group.vue"],"sourcesContent":["<template>\n  <li class=\"el-menu-item-group\">\n    <div\n      class=\"el-menu-item-group__title\"\n      :style=\"{ paddingLeft: `${levelPadding}px` }\"\n    >\n      <template v-if=\"!$slots.title\">{{ title }}</template>\n      <slot v-else name=\"title\" />\n    </div>\n    <ul>\n      <slot />\n    </ul>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, getCurrentInstance, inject } from 'vue'\nimport { throwError } from '@element-plus/utils/error'\nimport { menuItemGroupProps } from './menu-item-group'\n\nimport type { MenuProvider } from './types'\n\nconst COMPONENT_NAME = 'ElMenuItemGroup'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  props: menuItemGroupProps,\n\n  setup() {\n    const instance = getCurrentInstance()!\n    const menu = inject<MenuProvider>('rootMenu')\n    if (!menu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const levelPadding = computed(() => {\n      if (menu.props.collapse) return 20\n      let padding = 20\n      let parent = instance.parent\n      while (parent && parent.type.name !== 'ElMenu') {\n        if (parent.type.name === 'ElSubMenu') {\n          padding += 20\n        }\n        parent = parent.parent\n      }\n      return padding\n    })\n\n    return {\n      levelPadding,\n    }\n  },\n})\n</script>\n"],"names":[],"mappings":";;;;AAkBA,oBAAoB,GAAG,iBAAiB,CAAC;;AAEzC,EAAE,MAAM,cAAc;;AAEtB,EAAE,KAAK,GAAG;;AAEV,IAAI,MAAM,OAAO,MAAM,CAAC;IACpB,IAAI,CAAC,IAAI;;IAET,MAAM,YAAY,GAAG;;QAEjB;MACF,IAAI,OAAO,KAAK,CAAC;MACjB,IAAI,SAAS,QAAQ,CAAC,MAAM,CAAC;aACtB,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;;UAE5C,OAAO,IAAI,EAAE;SACd;QACD,MAAM;OACP;MACD,OAAO,OAAO,CAAC;;WAEV;;;;;;;;"}