import { resolveComponent, openBlock, createBlock, mergeProps, withCtx, createElementBlock, toDisplayString, createCommentVNode, renderSlot, createTextVNode } from 'vue';

const _hoisted_1 = {
  key: 0,
  class: "el-popover__title",
  role: "title"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_el_tooltip = resolveComponent("el-tooltip");
  return openBlock(), createBlock(_component_el_tooltip, mergeProps({ ref: "tooltipRef" }, _ctx.$attrs, {
    "aria-label": _ctx.title,
    effect: _ctx.effect,
    enterable: _ctx.enterable,
    "popper-class": _ctx.kls,
    "popper-style": _ctx.style
  }), {
    content: withCtx(() => [
      _ctx.title ? (openBlock(), createElementBlock("div", _hoisted_1, toDisplayString(_ctx.title), 1)) : createCommentVNode("v-if", true),
      renderSlot(_ctx.$slots, "default", {}, () => [
        createTextVNode(toDisplayString(_ctx.content), 1)
      ])
    ]),
    default: withCtx(() => [
      _ctx.$slots.reference ? renderSlot(_ctx.$slots, "reference", { key: 0 }) : createCommentVNode("v-if", true)
    ]),
    _: 3
  }, 16, ["aria-label", "effect", "enterable", "popper-class", "popper-style"]);
}

export { render };
//# sourceMappingURL=index.vue_vue_type_template_id_15486cf0_lang.mjs.map
