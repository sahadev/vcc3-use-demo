import { defineComponent, ref, inject, watch, onMounted, unref, onBeforeUnmount } from 'vue';
import { usePopperArrowProps } from './popper.mjs';
import { POPPER_CONTENT_INJECTION_KEY } from './tokens.mjs';

var script = defineComponent({
  name: "ElPopperArrow",
  props: usePopperArrowProps,
  setup(props) {
    const arrowRef = ref(null);
    const popperContentInjection = inject(POPPER_CONTENT_INJECTION_KEY, void 0);
    watch(() => props.arrowOffset, (val) => {
      popperContentInjection.arrowOffset.value = val;
    });
    onMounted(() => {
      popperContentInjection.arrowRef.value = unref(arrowRef);
    });
    onBeforeUnmount(() => {
      popperContentInjection.arrowRef.value = null;
    });
    return {
      arrowRef
    };
  }
});

export { script as default };
//# sourceMappingURL=arrow.vue_vue_type_script_lang.mjs.map
