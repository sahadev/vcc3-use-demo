{"version":3,"file":"trigger.vue_vue_type_script_lang.mjs","sources":["../../../../../../packages/components/popper/src/trigger.vue"],"sourcesContent":["<template>\n  <el-only-child\n    v-if=\"!virtualTriggering\"\n    v-bind=\"$attrs\"\n    :aria-describedby=\"open ? id : undefined\"\n  >\n    <slot />\n  </el-only-child>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, watch } from 'vue'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useForwardRef } from '@element-plus/hooks'\nimport { usePopperTriggerProps } from './popper'\nimport { POPPER_INJECTION_KEY } from './tokens'\nimport { unwrapMeasurableEl } from './utils'\n\nexport default defineComponent({\n  name: 'ElPopperTrigger',\n  components: { ElOnlyChild },\n  inheritAttrs: false,\n  props: {\n    ...usePopperTriggerProps,\n    onMouseenter: Function,\n    onMouseleave: Function,\n    onMousedown: Function,\n    onKeydown: Function,\n    onFocus: Function,\n    onBlur: Function,\n    onContextmenu: Function,\n    id: String,\n    open: Boolean,\n  },\n  setup(props) {\n    const { triggerRef } = inject(POPPER_INJECTION_KEY, undefined)!\n    useForwardRef(triggerRef)\n\n    watch(\n      () => props.virtualRef,\n      (val) => {\n        if (val) {\n          triggerRef.value = unwrapMeasurableEl(val)\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    watch(\n      () => triggerRef.value,\n      (el, prevEl) => {\n        if (el && el instanceof HTMLElement) {\n          ;[\n            'onMouseenter',\n            'onMouseleave',\n            'onMousedown',\n            'onKeydown',\n            'onFocus',\n            'onBlur',\n            'onContextmenu',\n          ].forEach((eventName) => {\n            const handler = props[eventName]\n            if (handler) {\n              ;(el as HTMLElement).addEventListener(\n                eventName.slice(2).toLowerCase(),\n                handler\n              )\n              ;(prevEl as HTMLElement)?.removeEventListener(\n                eventName.slice(2).toLowerCase(),\n                handler\n              )\n            }\n          })\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    return {\n      triggerRef,\n    }\n  },\n})\n</script>\n"],"names":["ElOnlyChild"],"mappings":";;;;;;;;;AAgBA,aAAe,eAAe,CAAC;;AAE/B,EAAE,UAAU,iBAAIA,SAAW,EAAE;EAC3B,YAAY,EAAE,KAAK;EACnB,KAAK,EAAE;IACL,GAAG;IACH;IACA,YAAY,EAAE,QAAQ;IACtB,WAAW,UAAU;IACrB,SAAS,EAAE,QAAQ;IACnB,OAAO,EAAE,QAAQ;IACjB,MAAM,EAAE,QAAQ;IAChB,aAAa,EAAE;IACf,EAAE,EAAE,MAAM;IACV,IAAI,EAAE,OAAO;;OAEV,CAAC,KAAK,EAAE;;IAEX;IACA,MAAM,MAAM,KAAK,WAAW,EAAE,CAAC,GAAG,KAAK;MACrC,IAAI,GAAG,EAAE;;OAER;OACA;MACD,SAAS;;UAEL,MAAM,WAAW,KAAK,EAAE,CAAC,EAAE,EAAE,MAAM,KAAK;;;;UAIxC;;;;;UAKA,QAAQ;;SAET,SAAS,CAAC,SAAS,KAAK;UACvB;cACI,OAAO,EAAE;YACX,CAAC;YACD,EAAE,CAAC;YACH,MAAM,IAAI;;;;;eAKP,MAAM;;;gBAGL;;;;;;;"}