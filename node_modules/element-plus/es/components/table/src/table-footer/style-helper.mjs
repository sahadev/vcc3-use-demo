import { getCurrentInstance, computed } from 'vue';
import { getFixedColumnsClass, getFixedColumnOffset, ensureRightFixedStyle, ensurePosition } from '../util.mjs';
import useMapState from './mapState-helper.mjs';

function useStyle(props) {
  const instance = getCurrentInstance();
  const table = instance.parent;
  const { columns } = useMapState();
  const hasGutter = computed(() => {
    return !props.fixed && table.layout.gutterWidth > 0 && table.layout.height.value && table.layout.bodyScrollHeight.value > table.layout.bodyHeight.value;
  });
  const gutterWidth = computed(() => {
    return table.layout.gutterWidth;
  });
  const getCellClasses = (columns2, cellIndex, hasGutter2) => {
    const column = columns2[cellIndex];
    const classes = [
      "el-table__cell",
      column.id,
      column.align,
      column.labelClassName,
      ...getFixedColumnsClass(cellIndex, column.fixed, props.store)
    ];
    if (column.className) {
      classes.push(column.className);
    }
    if (!column.children) {
      classes.push("is-leaf");
    }
    if (hasGutter2 && cellIndex === columns2.length - 1) {
      classes.push("last");
    }
    return classes;
  };
  const getCellStyles = (column, cellIndex, hasGutter2) => {
    const fixedStyle = getFixedColumnOffset(cellIndex, column.fixed, props.store);
    ensureRightFixedStyle(fixedStyle, hasGutter2);
    ensurePosition(fixedStyle, "left");
    ensurePosition(fixedStyle, "right");
    return fixedStyle;
  };
  return {
    hasGutter,
    gutterWidth,
    getCellClasses,
    getCellStyles,
    columns
  };
}

export { useStyle as default };
//# sourceMappingURL=style-helper.mjs.map
