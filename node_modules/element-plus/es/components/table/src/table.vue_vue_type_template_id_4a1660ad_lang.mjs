import { resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, withDirectives, createVNode, createCommentVNode, createTextVNode, toDisplayString, vShow } from 'vue';

const _hoisted_1 = { class: "el-table__inner-wrapper" };
const _hoisted_2 = {
  ref: "hiddenColumns",
  class: "hidden-columns"
};
const _hoisted_3 = {
  key: 0,
  ref: "headerWrapper",
  class: "el-table__header-wrapper"
};
const _hoisted_4 = { class: "el-table__empty-text" };
const _hoisted_5 = {
  key: 1,
  ref: "appendWrapper",
  class: "el-table__append-wrapper"
};
const _hoisted_6 = {
  key: 1,
  class: "el-table__border-left-patch"
};
const _hoisted_7 = {
  key: 0,
  ref: "footerWrapper",
  class: "el-table__footer-wrapper"
};
const _hoisted_8 = {
  ref: "resizeProxy",
  class: "el-table__column-resize-proxy"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_table_header = resolveComponent("table-header");
  const _component_table_body = resolveComponent("table-body");
  const _component_table_footer = resolveComponent("table-footer");
  const _directive_mousewheel = resolveDirective("mousewheel");
  return openBlock(), createElementBlock("div", {
    ref: "tableWrapper",
    class: normalizeClass([
      {
        "el-table--fit": _ctx.fit,
        "el-table--striped": _ctx.stripe,
        "el-table--border": _ctx.border || _ctx.isGroup,
        "el-table--hidden": _ctx.isHidden,
        "el-table--group": _ctx.isGroup,
        "el-table--fluid-height": _ctx.maxHeight,
        "el-table--scrollable-x": _ctx.layout.scrollX.value,
        "el-table--scrollable-y": _ctx.layout.scrollY.value,
        "el-table--enable-row-hover": !_ctx.store.states.isComplex.value,
        "el-table--enable-row-transition": (_ctx.store.states.data.value || []).length !== 0 && (_ctx.store.states.data.value || []).length < 100
      },
      _ctx.tableSize ? `el-table--${_ctx.tableSize}` : "",
      _ctx.className,
      "el-table"
    ]),
    style: normalizeStyle(_ctx.style),
    onMouseleave: _cache[0] || (_cache[0] = ($event) => _ctx.handleMouseLeave())
  }, [
    createElementVNode("div", _hoisted_1, [
      createElementVNode("div", _hoisted_2, [
        renderSlot(_ctx.$slots, "default")
      ], 512),
      _ctx.showHeader ? withDirectives((openBlock(), createElementBlock("div", _hoisted_3, [
        createVNode(_component_table_header, {
          ref: "tableHeader",
          border: _ctx.border,
          "default-sort": _ctx.defaultSort,
          store: _ctx.store,
          style: normalizeStyle(_ctx.tableBodyStyles),
          onSetDragVisible: _ctx.setDragVisible
        }, null, 8, ["border", "default-sort", "store", "style", "onSetDragVisible"])
      ])), [
        [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]
      ]) : createCommentVNode("v-if", true),
      createElementVNode("div", {
        ref: "bodyWrapper",
        style: normalizeStyle(_ctx.bodyHeight),
        class: "el-table__body-wrapper"
      }, [
        createVNode(_component_table_body, {
          context: _ctx.context,
          highlight: _ctx.highlightCurrentRow,
          "row-class-name": _ctx.rowClassName,
          "tooltip-effect": _ctx.tooltipEffect,
          "row-style": _ctx.rowStyle,
          store: _ctx.store,
          stripe: _ctx.stripe,
          style: normalizeStyle({
            width: _ctx.bodyWidth
          })
        }, null, 8, ["context", "highlight", "row-class-name", "tooltip-effect", "row-style", "store", "stripe", "style"]),
        _ctx.isEmpty ? (openBlock(), createElementBlock("div", {
          key: 0,
          ref: "emptyBlock",
          style: normalizeStyle(_ctx.emptyBlockStyle),
          class: "el-table__empty-block"
        }, [
          createElementVNode("span", _hoisted_4, [
            renderSlot(_ctx.$slots, "empty", {}, () => [
              createTextVNode(toDisplayString(_ctx.computedEmptyText), 1)
            ])
          ])
        ], 4)) : createCommentVNode("v-if", true),
        _ctx.$slots.append ? (openBlock(), createElementBlock("div", _hoisted_5, [
          renderSlot(_ctx.$slots, "append")
        ], 512)) : createCommentVNode("v-if", true)
      ], 4),
      _ctx.border || _ctx.isGroup ? (openBlock(), createElementBlock("div", _hoisted_6)) : createCommentVNode("v-if", true),
      _ctx.layout.scrollX.value && _ctx.layout.height.value ? (openBlock(), createElementBlock("div", {
        key: 2,
        class: "el-table__border-bottom-patch",
        style: normalizeStyle(_ctx.borderBottomPatchStyles)
      }, null, 4)) : createCommentVNode("v-if", true)
    ]),
    _ctx.showSummary ? withDirectives((openBlock(), createElementBlock("div", _hoisted_7, [
      createVNode(_component_table_footer, {
        border: _ctx.border,
        "default-sort": _ctx.defaultSort,
        store: _ctx.store,
        style: normalizeStyle(_ctx.tableBodyStyles),
        "sum-text": _ctx.computedSumText,
        "summary-method": _ctx.summaryMethod
      }, null, 8, ["border", "default-sort", "store", "style", "sum-text", "summary-method"])
    ])), [
      [vShow, !_ctx.isEmpty],
      [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]
    ]) : createCommentVNode("v-if", true),
    withDirectives(createElementVNode("div", _hoisted_8, null, 512), [
      [vShow, _ctx.resizeProxyVisible]
    ])
  ], 38);
}

export { render };
//# sourceMappingURL=table.vue_vue_type_template_id_4a1660ad_lang.mjs.map
