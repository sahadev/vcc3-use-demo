export declare const ElTooltip: import("../../utils/types").SFCWithInstall<import("vue").DefineComponent<{
    openDelay: import("../../utils/props").BuildPropReturn<NumberConstructor, number | (() => number) | undefined, unknown, unknown, unknown>;
    visibleArrow: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    hideAfter: import("../../utils/props").BuildPropReturn<NumberConstructor, number | (() => number) | undefined, unknown, unknown, unknown>;
    showArrow: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    arrowOffset: import("../../utils/props").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    disabled: BooleanConstructor;
    trigger: {
        type: import("vue").PropType<"click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[]>;
        default: string;
    };
    virtualRef: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<import("..").Measurable>, unknown, unknown, unknown, unknown>;
    virtualTriggering: import("../../utils/props").BuildPropReturn<BooleanConstructor, unknown, unknown, unknown, unknown>;
    content: import("../../utils/props").BuildPropReturn<StringConstructor, string | (() => string) | undefined, unknown, unknown, unknown>;
    rawContent: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    persistent: BooleanConstructor;
    ariaLabel: StringConstructor;
    visible: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<boolean | null>, (() => null) | null | undefined, unknown, unknown, unknown>;
    transition: import("../../utils/props").BuildPropReturn<StringConstructor, string | (() => string) | undefined, unknown, unknown, unknown>;
    teleported: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    style: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<import("vue").StyleValue>, string | import("vue").CSSProperties | (() => string) | (() => import("vue").CSSProperties) | (() => import("vue").StyleValue[]) | undefined, unknown, unknown, unknown>;
    className: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]>, string | (() => string) | (() => {
        [x: string]: any;
    }) | (() => (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]) | undefined, unknown, unknown, unknown>;
    effect: import("../../utils/props").BuildPropReturn<StringConstructor, string | (() => string) | undefined, unknown, unknown, unknown>;
    enterable: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    pure: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    popperClass: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]>, string | (() => string) | (() => {
        [x: string]: any;
    }) | (() => (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]) | undefined, unknown, unknown, unknown>;
    popperStyle: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<import("vue").StyleValue>, string | import("vue").CSSProperties | (() => string) | (() => import("vue").CSSProperties) | (() => import("vue").StyleValue[]) | undefined, unknown, unknown, unknown>;
    referenceEl: import("../../utils/props").BuildPropReturn<import("../../utils/props").PropWrapper<HTMLElement>, HTMLElement | (() => HTMLElement) | undefined, unknown, unknown, unknown>;
    stopPopperMouseEvent: import("../../utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    zIndex: NumberConstructor;
    boundariesPadding: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => number & {}) | (() => number) | ((new (...args: any[]) => number & {}) | (() => number))[], 0 | (() => 0) | undefined, false, unknown, unknown>;
    fallbackPlacements: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => import("@popperjs/core").Placement[]) | (() => import("@popperjs/core").Placement[]) | ((new (...args: any[]) => import("@popperjs/core").Placement[]) | (() => import("@popperjs/core").Placement[]))[], (() => never[]) | undefined, false, unknown, unknown>;
    gpuAcceleration: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>))[], true | (() => true) | undefined, false, unknown, unknown>;
    offset: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => number & {}) | (() => number) | ((new (...args: any[]) => number & {}) | (() => number))[], 12 | (() => 12) | undefined, false, unknown, unknown>;
    placement: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown>))[], "bottom" | (() => "bottom") | undefined, false, unknown, unknown>;
    popperOptions: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => Partial<import("@popperjs/core").Options>) | (() => Partial<import("@popperjs/core").Options>) | ((new (...args: any[]) => Partial<import("@popperjs/core").Options>) | (() => Partial<import("@popperjs/core").Options>))[], (() => {}) | undefined, false, unknown, unknown>;
    strategy: import("../../utils/props").BuildPropReturn<(new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>))[], "absolute" | (() => "absolute") | undefined, false, unknown, unknown>;
    showAfter: import("../../utils/props").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
}, {
    compatShowAfter: import("vue").ComputedRef<number>;
    compatShowArrow: import("vue").ComputedRef<import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>>;
    popperRef: import("vue").Ref<({
        $: import("vue").ComponentInternalInstance;
        $data: {};
        $props: Partial<{}> & Omit<Readonly<{} & {} & {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, never>;
        $attrs: {
            [x: string]: unknown;
        };
        $refs: {
            [x: string]: unknown;
        };
        $slots: Readonly<{
            [name: string]: import("vue").Slot | undefined;
        }>;
        $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $emit: ((event: string, ...args: any[]) => void) | ((event: string, ...args: any[]) => void);
        $el: any;
        $options: import("vue").ComponentOptionsBase<Readonly<{} & {} & {}>, import("..").ElPopperInjectionContext, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, {}> & {
            beforeCreate?: ((() => void) | (() => void)[]) | undefined;
            created?: ((() => void) | (() => void)[]) | undefined;
            beforeMount?: ((() => void) | (() => void)[]) | undefined;
            mounted?: ((() => void) | (() => void)[]) | undefined;
            beforeUpdate?: ((() => void) | (() => void)[]) | undefined;
            updated?: ((() => void) | (() => void)[]) | undefined;
            activated?: ((() => void) | (() => void)[]) | undefined;
            deactivated?: ((() => void) | (() => void)[]) | undefined;
            beforeDestroy?: ((() => void) | (() => void)[]) | undefined;
            beforeUnmount?: ((() => void) | (() => void)[]) | undefined;
            destroyed?: ((() => void) | (() => void)[]) | undefined;
            unmounted?: ((() => void) | (() => void)[]) | undefined;
            renderTracked?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            renderTriggered?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            errorCaptured?: (((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void) | ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void)[]) | undefined;
        };
        $forceUpdate: () => void;
        $nextTick: typeof import("vue").nextTick;
        $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
    } & Readonly<{} & {} & {}> & import("vue").ShallowUnwrapRef<import("..").ElPopperInjectionContext> & {} & {} & import("vue").ComponentCustomProperties) | null>;
    open: import("vue").Ref<boolean>;
    updatePopper: () => void;
    onOpen: () => void;
    onClose: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, string[], string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    openDelay?: unknown;
    visibleArrow?: unknown;
    hideAfter?: unknown;
    showArrow?: unknown;
    arrowOffset?: unknown;
    disabled?: unknown;
    trigger?: unknown;
    virtualRef?: unknown;
    virtualTriggering?: unknown;
    content?: unknown;
    rawContent?: unknown;
    persistent?: unknown;
    ariaLabel?: unknown;
    visible?: unknown;
    transition?: unknown;
    teleported?: unknown;
    style?: unknown;
    className?: unknown;
    effect?: unknown;
    enterable?: unknown;
    pure?: unknown;
    popperClass?: unknown;
    popperStyle?: unknown;
    referenceEl?: unknown;
    stopPopperMouseEvent?: unknown;
    zIndex?: unknown;
    boundariesPadding?: unknown;
    fallbackPlacements?: unknown;
    gpuAcceleration?: unknown;
    offset?: unknown;
    placement?: unknown;
    popperOptions?: unknown;
    strategy?: unknown;
    showAfter?: unknown;
} & {
    disabled: boolean;
    style: import("vue").StyleValue;
    transition: string;
    offset: number;
    visible: import("../../utils/props").BuildPropType<import("../../utils/props").PropWrapper<boolean | null>, unknown, unknown>;
    content: string;
    effect: string;
    arrowOffset: number;
    boundariesPadding: number;
    fallbackPlacements: import("@popperjs/core").Placement[];
    gpuAcceleration: import("../../utils/props").BuildPropType<(new (...args: any[]) => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>))[], unknown, unknown>;
    placement: import("../../utils/props").BuildPropType<(new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown>))[], unknown, unknown>;
    popperOptions: Partial<import("@popperjs/core").Options>;
    strategy: import("../../utils/props").BuildPropType<(new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>))[], unknown, unknown>;
    className: string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[];
    enterable: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    pure: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    popperClass: string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[];
    popperStyle: import("vue").StyleValue;
    referenceEl: HTMLElement;
    stopPopperMouseEvent: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    showAfter: number;
    hideAfter: number;
    rawContent: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    persistent: boolean;
    teleported: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    trigger: "click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[];
    openDelay: number;
    visibleArrow: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    showArrow: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
} & {
    zIndex?: number | undefined;
    ariaLabel?: string | undefined;
    virtualRef?: import("..").Measurable | undefined;
    virtualTriggering?: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
}> & {
    [x: string & `on${string}`]: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    style: import("vue").StyleValue;
    transition: string;
    offset: number;
    visible: import("../../utils/props").BuildPropType<import("../../utils/props").PropWrapper<boolean | null>, unknown, unknown>;
    content: string;
    effect: string;
    arrowOffset: number;
    boundariesPadding: number;
    fallbackPlacements: import("@popperjs/core").Placement[];
    gpuAcceleration: import("../../utils/props").BuildPropType<(new (...args: any[]) => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>))[], unknown, unknown>;
    placement: import("../../utils/props").BuildPropType<(new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, import("@popperjs/core").Placement, unknown>))[], unknown, unknown>;
    popperOptions: Partial<import("@popperjs/core").Options>;
    strategy: import("../../utils/props").BuildPropType<(new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>) | ((new (...args: any[]) => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("../../utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>))[], unknown, unknown>;
    className: string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[];
    enterable: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    pure: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    popperClass: string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[];
    popperStyle: import("vue").StyleValue;
    referenceEl: HTMLElement;
    stopPopperMouseEvent: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    showAfter: number;
    hideAfter: number;
    rawContent: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    persistent: boolean;
    teleported: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    trigger: "click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[];
    virtualRef: import("..").Measurable;
    virtualTriggering: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    openDelay: number;
    visibleArrow: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
    showArrow: import("../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
}>> & Record<string, any>;
export * from './src/tooltip';
export default ElTooltip;
