{"version":3,"file":"tooltip.mjs","sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\nimport {\n  usePopperTriggerProps,\n  usePopperContentProps,\n} from '@element-plus/components/popper'\nimport { useDelayedToggleProps } from '@element-plus/hooks'\n\nimport type { ExtractPropTypes, PropType } from 'vue'\n\nconst triggers = ['hover', 'focus', 'click', 'contextmenu'] as const\n\nexport type Trigger = typeof triggers[number]\n\nexport const useTooltipContentProps = {\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  ...buildProps({\n    content: {\n      type: String,\n      default: '',\n    },\n    rawContent: {\n      type: Boolean,\n      default: false,\n    },\n    persistent: Boolean,\n    ariaLabel: String,\n    // because model toggle prop is generated dynamically\n    // so the typing cannot be evaluated by typescript as type:\n    // [name]: { type: Boolean, default: null }\n    // so we need to declare that again for type checking.\n    visible: {\n      type: definePropType<boolean | null>(Boolean),\n      default: null,\n    },\n    transition: {\n      type: String,\n      default: 'el-fade-in-linear',\n    },\n    teleported: {\n      type: Boolean,\n      default: true,\n    },\n  }),\n}\n\nexport const useTooltipTriggerProps = {\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: [String, Array] as PropType<Trigger | Trigger[]>,\n    default: 'hover',\n  },\n}\n\nexport const useTooltipProps = buildProps({\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> &\n  ElTooltipContentProps &\n  ElTooltipTriggerProps\n"],"names":[],"mappings":";;;;;;AAMA,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;AAChD,MAAC,sBAAsB,GAAG;AACtC,EAAE,GAAG,qBAAqB;AAC1B,EAAE,GAAG,qBAAqB;AAC1B,EAAE,GAAG,UAAU,CAAC;AAChB,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,EAAE;AACjB,KAAK;AACL,IAAI,UAAU,EAAE;AAChB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,KAAK;AACpB,KAAK;AACL,IAAI,UAAU,EAAE,OAAO;AACvB,IAAI,SAAS,EAAE,MAAM;AACrB,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,cAAc,CAAC,OAAO,CAAC;AACnC,MAAM,OAAO,EAAE,IAAI;AACnB,KAAK;AACL,IAAI,UAAU,EAAE;AAChB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,mBAAmB;AAClC,KAAK;AACL,IAAI,UAAU,EAAE;AAChB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,IAAI;AACnB,KAAK;AACL,GAAG,CAAC;AACJ,EAAE;AACU,MAAC,sBAAsB,GAAG;AACtC,EAAE,GAAG,qBAAqB;AAC1B,EAAE,QAAQ,EAAE,OAAO;AACnB,EAAE,OAAO,EAAE;AACX,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;AACzB,IAAI,OAAO,EAAE,OAAO;AACpB,GAAG;AACH,EAAE;AACU,MAAC,eAAe,GAAG,UAAU,CAAC;AAC1C,EAAE,SAAS,EAAE;AACb,IAAI,IAAI,EAAE,MAAM;AAChB,GAAG;AACH,EAAE,YAAY,EAAE;AAChB,IAAI,IAAI,EAAE,OAAO;AACjB,IAAI,OAAO,EAAE,KAAK,CAAC;AACnB,GAAG;AACH,EAAE,SAAS,EAAE;AACb,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,OAAO,EAAE,GAAG;AAChB,GAAG;AACH,EAAE,SAAS,EAAE;AACb,IAAI,IAAI,EAAE,OAAO;AACjB,IAAI,OAAO,EAAE,IAAI;AACjB,GAAG;AACH,CAAC;;;;"}