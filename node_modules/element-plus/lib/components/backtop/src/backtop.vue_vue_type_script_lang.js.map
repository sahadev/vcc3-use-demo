{"version":3,"file":"backtop.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/backtop/src/backtop.vue"],"sourcesContent":["<template>\n  <transition name=\"el-fade-in\">\n    <div\n      v-if=\"visible\"\n      :style=\"{\n        right: styleRight,\n        bottom: styleBottom,\n      }\"\n      class=\"el-backtop\"\n      @click.stop=\"handleClick\"\n    >\n      <slot>\n        <el-icon class=\"el-backtop__icon\"><caret-top /></el-icon>\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, shallowRef } from 'vue'\nimport { useEventListener, useThrottleFn } from '@vueuse/core'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { easeInOutCubic } from '@element-plus/utils/animation'\nimport { throwError } from '@element-plus/utils/error'\nimport { CaretTop } from '@element-plus/icons-vue'\n\nimport { backtopEmits, backtopProps } from './backtop'\n\nconst COMPONENT_NAME = 'ElBacktop'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElIcon,\n    CaretTop,\n  },\n  props: backtopProps,\n  emits: backtopEmits,\n\n  setup(props, { emit }) {\n    const el = shallowRef<HTMLElement | undefined>(document.documentElement)\n    const container = shallowRef<Document | HTMLElement>(document)\n    const visible = ref(false)\n    const styleBottom = computed(() => `${props.bottom}px`)\n    const styleRight = computed(() => `${props.right}px`)\n\n    const scrollToTop = () => {\n      if (!el.value) return\n      const beginTime = Date.now()\n      const beginValue = el.value.scrollTop\n      const frameFunc = () => {\n        if (!el.value) return\n        const progress = (Date.now() - beginTime) / 500\n        if (progress < 1) {\n          el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress))\n          requestAnimationFrame(frameFunc)\n        } else {\n          el.value.scrollTop = 0\n        }\n      }\n      requestAnimationFrame(frameFunc)\n    }\n    const handleScroll = () => {\n      if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight\n    }\n    const handleClick = (event: MouseEvent) => {\n      scrollToTop()\n      emit('click', event)\n    }\n\n    const handleScrollThrottled = useThrottleFn(handleScroll, 300)\n\n    onMounted(() => {\n      if (props.target) {\n        el.value =\n          document.querySelector<HTMLElement>(props.target) ?? undefined\n        if (!el.value) {\n          throwError(COMPONENT_NAME, `target is not existed: ${props.target}`)\n        }\n        container.value = el.value\n      }\n\n      useEventListener(container, 'scroll', handleScrollThrottled)\n    })\n\n    return {\n      visible,\n      styleBottom,\n      styleRight,\n      handleClick,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","CaretTop","backtopProps","backtopEmits","ref","computed","throwError"],"mappings":";;;;;;;;;;;;;AA0BA,aAAeA,mBAAe,CAAC;;AAE/B,EAAE,UAAU,EAAE;;AAEd,cAAIC,iBAAQ;GACT;EACD,KAAK,EAAEC;OACF,EAAEC;OACF,CAAC;;IAEJ,MAAM,SAAS;IACf,MAAM,OAAO,GAAGC;;IAEhB,MAAM,UAAU,GAAGC;IACnB,MAAM,WAAW,GAAG,MAAM;MACxB,IAAI,CAAC,EAAE,CAAC;QACN,OAAO;MACT,MAAM,YAAY,IAAI,CAAC,GAAG,EAAE;MAC5B,MAAM,aAAa,EAAE,CAAC,KAAK,UAAU,CAAC;;QAEpC,IAAI,CAAC,EAAE,CAAC;UACN,OAAO;QACT,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC;QACvB,IAAI,QAAQ,GAAG,GAAG;UAChB,EAAE,CAAC,KAAK,CAAC,SAAS;;SAEnB,MAAM;YACH,CAAC,KAAK,CAAC;;;;;;MAMb;QACE,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;;IAE7B,MAAM,WAAW,IAAI;MACnB,WAAW,GAAG;;KAEf,CAAC;UACI;iBACG,CAAC,MAAM;;;QAGZ,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,SAAS,aAAa,CAAC,KAAK,CAAC,MAAM;;UAElDC,gBAAU;SACX;QACD,SAAS;;4BAEM;;;aAGV;MACP;;MAEA,WAAW;KACZ;;;;;;"}