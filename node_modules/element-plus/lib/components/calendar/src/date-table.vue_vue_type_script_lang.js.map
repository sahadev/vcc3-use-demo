{"version":3,"file":"date-table.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/calendar/src/date-table.vue"],"sourcesContent":["<template>\n  <table\n    :class=\"{\n      'el-calendar-table': true,\n      'is-range': isInRange,\n    }\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n  >\n    <thead v-if=\"!hideHeader\">\n      <th v-for=\"day in weekDays\" :key=\"day\">{{ day }}</th>\n    </thead>\n\n    <tbody>\n      <tr\n        v-for=\"(row, index) in rows\"\n        :key=\"index\"\n        :class=\"{\n          'el-calendar-table__row': true,\n          'el-calendar-table__row--hide-border': index === 0 && hideHeader,\n        }\"\n      >\n        <td\n          v-for=\"(cell, key) in row\"\n          :key=\"key\"\n          :class=\"getCellClass(cell)\"\n          @click=\"handlePickDay(cell)\"\n        >\n          <div class=\"el-calendar-day\">\n            <slot name=\"dateCell\" :data=\"getSlotData(cell)\">\n              <span>{{ cell.text }}</span>\n            </slot>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport dayjs from 'dayjs'\nimport localeData from 'dayjs/plugin/localeData'\nimport { useLocale } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { dateTableProps, dateTableEmits } from './date-table'\nimport type { Dayjs } from 'dayjs'\ndayjs.extend(localeData)\n\ntype CellType = 'next' | 'prev' | 'current'\ninterface Cell {\n  text: number\n  type: CellType\n}\n\nconst WEEK_DAYS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'] as const\n\nexport const getPrevMonthLastDays = (date: Dayjs, count: number) => {\n  const lastDay = date.subtract(1, 'month').endOf('month').date()\n  return rangeArr(count).map((_, index) => lastDay - (count - index - 1))\n}\n\nexport const getMonthDays = (date: Dayjs) => {\n  const days = date.daysInMonth()\n  return rangeArr(days).map((_, index) => index + 1)\n}\n\nconst toNestedArr = (days: Cell[]) =>\n  rangeArr(days.length / 7).map((index) => {\n    const start = index * 7\n    return days.slice(start, start + 7)\n  })\n\nexport default defineComponent({\n  props: dateTableProps,\n  emits: dateTableEmits,\n\n  setup(props, { emit }) {\n    const { t, lang } = useLocale()\n\n    const now = dayjs().locale(lang.value)\n    // todo better way to get Day.js locale object\n    const firstDayOfWeek: number = (now as any).$locale().weekStart || 0\n\n    const isInRange = computed(() => !!props.range && !!props.range.length)\n\n    const rows = computed(() => {\n      let days: Cell[] = []\n      if (isInRange.value) {\n        const [start, end] = props.range!\n        const currentMonthRange: Cell[] = rangeArr(\n          end.date() - start.date() + 1\n        ).map((index) => ({\n          text: start.date() + index,\n          type: 'current',\n        }))\n\n        let remaining = currentMonthRange.length % 7\n        remaining = remaining === 0 ? 0 : 7 - remaining\n        const nextMonthRange: Cell[] = rangeArr(remaining).map((_, index) => ({\n          text: index + 1,\n          type: 'next',\n        }))\n        days = currentMonthRange.concat(nextMonthRange)\n      } else {\n        const firstDay = props.date.startOf('month').day() || 7\n        const prevMonthDays: Cell[] = getPrevMonthLastDays(\n          props.date,\n          firstDay - firstDayOfWeek\n        ).map((day) => ({\n          text: day,\n          type: 'prev',\n        }))\n        const currentMonthDays: Cell[] = getMonthDays(props.date).map(\n          (day) => ({\n            text: day,\n            type: 'current',\n          })\n        )\n        days = [...prevMonthDays, ...currentMonthDays]\n        const nextMonthDays: Cell[] = rangeArr(42 - days.length).map(\n          (_, index) => ({\n            text: index + 1,\n            type: 'next',\n          })\n        )\n        days = days.concat(nextMonthDays)\n      }\n      return toNestedArr(days)\n    })\n\n    const weekDays = computed(() => {\n      const start = firstDayOfWeek\n      if (start === 0) {\n        return WEEK_DAYS.map((_) => t(`el.datepicker.weeks.${_}`))\n      } else {\n        return WEEK_DAYS.slice(start)\n          .concat(WEEK_DAYS.slice(0, start))\n          .map((_) => t(`el.datepicker.weeks.${_}`))\n      }\n    })\n\n    const getFormattedDate = (day: number, type: CellType): Dayjs => {\n      switch (type) {\n        case 'prev':\n          return props.date.startOf('month').subtract(1, 'month').date(day)\n        case 'next':\n          return props.date.startOf('month').add(1, 'month').date(day)\n        case 'current':\n          return props.date.date(day)\n      }\n    }\n\n    const getCellClass = ({ text, type }: Cell) => {\n      const classes: string[] = [type]\n      if (type === 'current') {\n        const date = getFormattedDate(text, type)\n        if (date.isSame(props.selectedDay, 'day')) {\n          classes.push('is-selected')\n        }\n        if (date.isSame(now, 'day')) {\n          classes.push('is-today')\n        }\n      }\n      return classes\n    }\n\n    const handlePickDay = ({ text, type }: Cell) => {\n      const date = getFormattedDate(text, type)\n      emit('pick', date)\n    }\n\n    const getSlotData = ({ text, type }: Cell) => {\n      const day = getFormattedDate(text, type)\n      return {\n        isSelected: day.isSame(props.selectedDay),\n        type: `${type}-month`,\n        day: day.format('YYYY-MM-DD'),\n        date: day.toDate(),\n      }\n    }\n\n    return {\n      isInRange,\n      weekDays,\n      rows,\n      getCellClass,\n      handlePickDay,\n      getSlotData,\n    }\n  },\n})\n</script>\n"],"names":["dayjs","localeData","rangeArr","defineComponent","useLocale","computed"],"mappings":";;;;;;;;;;;;;;;;;;AA6CAA,yBAAK,OAAO,CAACC,8BAAU,EAAE;AACzB,eAAe,GAAG,MAAM,OAAO,EAAE;AACrB,MAAC;;AAEb,EAAE,OAAOC,kBAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,QAAQ;AACtC,EAAE;AACU,MAAC;EACX,MAAM,IAAI,GAAG;AACf;;AAEA,MAAM,cAAc,CAAC,SAASA,kBAAQ,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK;;AAEvE,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC;EACpC,CAAC;aACYC,mBAAe,CAAC;AAC/B;;AAEA,EAAE,KAAK,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE;IACnB,MAAM,GAAG,EAAE,IAAI,EAAE,GAAGC;IACpB,MAAM,GAAG,GAAGJ,yBAAK,EAAE,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC;AAC3C;;AAEA,IAAI,MAAM,IAAI,eAAW,OAAO;MAC1B,IAAI,IAAI,GAAG,EAAE,CAAC;MACd,IAAI,SAAS,CAAC;QACZ,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,MAAM;;;AAGnC,UAAU,MAAM,SAAS;SAChB,CAAC,CAAC,CAAC;YACA,SAAS;;QAEb;UACE,MAAM,QAAQ,CAAC;;UAEf,CAAC,CAAC;QACJ,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC;OACjC,MAAM;;QAEL,MAAM,aAAa,GAAG,qBAAqB,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG;;UAEhE,YAAY;UACZ,CAAC,CAAC;cACE;UACJ,IAAI,EAAE,GAAG;UACT,IAAI,EAAE,SAAS;UACf,CAAC,CAAC;QACJ,IAAI,GAAG,CAAC,GAAG;cACL,aAAa;UACjB,IAAI,EAAE,KAAK,GAAG,CAAC;UACf;;QAEF,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;;wBAElB,CAAC,KAAK,CAAC;;UAErB,QAAQ,GAAGK;;UAEX,KAAK,KAAK,CAAC,EAAE;QACf;;QAEA,OAAO,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC;;;UAG7C;cACI,IAAI;aACL,MAAM;UACT;QACF,WAAW;UACT,OAAO;aACJ;sBACS,CAAC,IAAI;;;UAGjB,YAAY,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK;YACjC,OAAO,GAAG,CAAC,IAAI,EAAE;UACnB,IAAI,KAAK;cACL,IAAI,GAAG;YACT,IAAI,OAAO,CAAC;UACd;;QAEF,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;;SAE5B;;;KAGJ,CAAC;UACI,aAAa,GAAG,CAAC,EAAE,IAAI;MAC3B,MAAM,IAAI;UACN,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;MACnB;UACI,WAAW,GAAG,CAAC,EAAE,IAAI,EAAE;YACrB,GAAG,GAAG,gBAAgB,CAAC,IAAI,EAAE;aAC5B;;;;QAIL,IAAI,EAAE,GAAG,CAAC,MAAM;OACjB,CAAC;;WAEG;eACI;cACD;UACJ;kBACQ;MACZ;;;;;;;;;;"}