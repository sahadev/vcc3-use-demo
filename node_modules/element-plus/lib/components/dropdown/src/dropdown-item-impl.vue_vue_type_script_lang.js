'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
require('../../roving-focus-group/index.js');
require('../../collection/index.js');
var index = require('../../icon/index.js');
var aria = require('../../../utils/aria.js');
var dom = require('../../../utils/dom.js');
var dropdown = require('./dropdown.js');
var rovingFocusGroup = require('../../roving-focus-group/src/roving-focus-group.js');
var tokens = require('../../roving-focus-group/src/tokens.js');
var collection = require('../../collection/src/collection.js');

var script = vue.defineComponent({
  name: "DropdownItemImpl",
  components: {
    ElIcon: index.ElIcon
  },
  props: dropdown.dropdownItemProps,
  emits: ["pointermove", "pointerleave", "click"],
  setup(_, { emit }) {
    const { collectionItemRef: dropdownCollectionItemRef } = vue.inject(dropdown.DROPDOWN_COLLECTION_ITEM_INJECTION_KEY, void 0);
    const { collectionItemRef: rovingFocusCollectionItemRef } = vue.inject(rovingFocusGroup.ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY, void 0);
    const {
      rovingFocusGroupItemRef,
      tabIndex,
      handleFocus,
      handleKeydown: handleItemKeydown,
      handleMousedown
    } = vue.inject(tokens.ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, void 0);
    const itemRef = dom.composeRefs(dropdownCollectionItemRef, rovingFocusCollectionItemRef, rovingFocusGroupItemRef);
    const handleKeydown = dom.composeEventHandlers((e) => {
      const { code } = e;
      if (code === aria.EVENT_CODE.enter || code === aria.EVENT_CODE.space) {
        e.preventDefault();
        e.stopImmediatePropagation();
        emit("click", e);
        return true;
      }
    }, handleItemKeydown);
    return {
      itemRef,
      dataset: {
        [collection.COLLECTION_ITEM_SIGN]: ""
      },
      tabIndex,
      handleFocus,
      handleKeydown,
      handleMousedown
    };
  }
});

exports["default"] = script;
//# sourceMappingURL=dropdown-item-impl.vue_vue_type_script_lang.js.map
