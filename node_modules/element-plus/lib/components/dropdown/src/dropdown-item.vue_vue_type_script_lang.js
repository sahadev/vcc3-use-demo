'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
require('../../roving-focus-group/index.js');
var dom = require('../../../utils/dom.js');
require('./dropdown-item-impl.js');
var useDropdown = require('./useDropdown.js');
var dropdown = require('./dropdown.js');
var tokens = require('./tokens.js');
var rovingFocusItem_vue_vue_type_script_lang = require('../../roving-focus-group/src/roving-focus-item.vue_vue_type_script_lang.js');
var dropdownItemImpl_vue_vue_type_script_lang = require('./dropdown-item-impl.vue_vue_type_script_lang.js');

var script = vue.defineComponent({
  name: "ElDropdownItem",
  components: {
    ElDropdownCollectionItem: dropdown.ElCollectionItem,
    ElRovingFocusItem: rovingFocusItem_vue_vue_type_script_lang["default"],
    ElDropdownItemImpl: dropdownItemImpl_vue_vue_type_script_lang["default"]
  },
  props: dropdown.dropdownItemProps,
  emits: ["pointermove", "pointerleave"],
  setup(props, { emit }) {
    const { elDropdown } = useDropdown.useDropdown();
    const _instance = vue.getCurrentInstance();
    const itemRef = vue.ref(null);
    const textContent = vue.computed(() => {
      var _a, _b;
      return (_b = (_a = vue.unref(itemRef)) == null ? void 0 : _a.textContent) != null ? _b : "";
    });
    const { onItemEnter, onItemLeave } = vue.inject(tokens.DROPDOWN_INJECTION_KEY, void 0);
    const handlePointerMove = dom.composeEventHandlers((e) => {
      emit("pointermove", e);
      return e.defaultPrevented;
    }, dom.whenMouse((e) => {
      var _a;
      if (props.disabled) {
        onItemLeave(e);
      } else {
        onItemEnter(e);
        if (!e.defaultPrevented) {
          ;
          (_a = e.currentTarget) == null ? void 0 : _a.focus();
        }
      }
    }));
    const handlePointerLeave = dom.composeEventHandlers((e) => {
      emit("pointerleave", e);
      return e.defaultPrevented;
    }, dom.whenMouse((e) => {
      onItemLeave(e);
    }));
    function handleClick(e) {
      var _a, _b, _c;
      if (props.disabled) {
        e.stopImmediatePropagation();
        return;
      }
      if ((_a = elDropdown == null ? void 0 : elDropdown.hideOnClick) == null ? void 0 : _a.value) {
        (_b = elDropdown.handleClick) == null ? void 0 : _b.call(elDropdown);
      }
      (_c = elDropdown.commandHandler) == null ? void 0 : _c.call(elDropdown, props.command, _instance, e);
    }
    return {
      handleClick,
      handlePointerMove,
      handlePointerLeave,
      textContent
    };
  }
});

exports["default"] = script;
//# sourceMappingURL=dropdown-item.vue_vue_type_script_lang.js.map
