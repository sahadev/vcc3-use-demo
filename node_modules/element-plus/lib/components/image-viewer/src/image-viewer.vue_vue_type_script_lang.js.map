{"version":3,"file":"image-viewer.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/image-viewer/src/image-viewer.vue"],"sourcesContent":["<template>\n  <transition name=\"viewer-fade\">\n    <div\n      ref=\"wrapper\"\n      :tabindex=\"-1\"\n      class=\"el-image-viewer__wrapper\"\n      :style=\"{ zIndex }\"\n    >\n      <div\n        class=\"el-image-viewer__mask\"\n        @click.self=\"hideOnClickModal && hide()\"\n      />\n\n      <!-- CLOSE -->\n      <span class=\"el-image-viewer__btn el-image-viewer__close\" @click=\"hide\">\n        <el-icon><close /></el-icon>\n      </span>\n\n      <!-- ARROW -->\n      <template v-if=\"!isSingle\">\n        <span\n          class=\"el-image-viewer__btn el-image-viewer__prev\"\n          :class=\"{ 'is-disabled': !infinite && isFirst }\"\n          @click=\"prev\"\n        >\n          <el-icon><arrow-left /></el-icon>\n        </span>\n        <span\n          class=\"el-image-viewer__btn el-image-viewer__next\"\n          :class=\"{ 'is-disabled': !infinite && isLast }\"\n          @click=\"next\"\n        >\n          <el-icon><arrow-right /></el-icon>\n        </span>\n      </template>\n      <!-- ACTIONS -->\n      <div class=\"el-image-viewer__btn el-image-viewer__actions\">\n        <div class=\"el-image-viewer__actions__inner\">\n          <el-icon @click=\"handleActions('zoomOut')\">\n            <zoom-out />\n          </el-icon>\n          <el-icon @click=\"handleActions('zoomIn')\">\n            <zoom-in />\n          </el-icon>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <el-icon @click=\"toggleMode\">\n            <component :is=\"mode.icon\" />\n          </el-icon>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <el-icon @click=\"handleActions('anticlockwise')\">\n            <refresh-left />\n          </el-icon>\n          <el-icon @click=\"handleActions('clockwise')\">\n            <refresh-right />\n          </el-icon>\n        </div>\n      </div>\n      <!-- CANVAS -->\n      <div class=\"el-image-viewer__canvas\">\n        <img\n          v-for=\"(url, i) in urlList\"\n          v-show=\"i === index\"\n          ref=\"img\"\n          :key=\"url\"\n          :src=\"url\"\n          :style=\"imgStyle\"\n          class=\"el-image-viewer__img\"\n          @load=\"handleImgLoad\"\n          @error=\"handleImgError\"\n          @mousedown=\"handleMouseDown\"\n        />\n      </div>\n      <slot />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  ref,\n  onMounted,\n  watch,\n  nextTick,\n  effectScope,\n  markRaw,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport ElIcon from '@element-plus/components/icon'\nimport { useLocale } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { rafThrottle, isFirefox } from '@element-plus/utils/util'\nimport {\n  Close,\n  ArrowLeft,\n  ArrowRight,\n  ZoomOut,\n  ZoomIn,\n  RefreshLeft,\n  RefreshRight,\n  FullScreen,\n  ScaleToOriginal,\n} from '@element-plus/icons-vue'\nimport { imageViewerProps, imageViewerEmits } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\n\nconst Mode = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\nconst mousewheelEventName = isFirefox() ? 'DOMMouseScroll' : 'mousewheel'\nexport type ImageViewerAction =\n  | 'zoomIn'\n  | 'zoomOut'\n  | 'clockwise'\n  | 'anticlockwise'\n\nexport default defineComponent({\n  name: 'ElImageViewer',\n  components: {\n    ElIcon,\n    Close,\n    ArrowLeft,\n    ArrowRight,\n    ZoomOut,\n    ZoomIn,\n    RefreshLeft,\n    RefreshRight,\n  },\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const wrapper = ref<HTMLDivElement>()\n    const img = ref<HTMLImageElement>()\n\n    const scopeEventListener = effectScope()\n\n    const loading = ref(true)\n    const index = ref(props.initialIndex)\n    const mode = ref(Mode.CONTAIN)\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false,\n    })\n\n    const isSingle = computed(() => {\n      const { urlList } = props\n      return urlList.length <= 1\n    })\n\n    const isFirst = computed(() => {\n      return index.value === 0\n    })\n\n    const isLast = computed(() => {\n      return index.value === props.urlList.length - 1\n    })\n\n    const currentImg = computed(() => {\n      return props.urlList[index.value]\n    })\n\n    const imgStyle = computed(() => {\n      const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n      const style: CSSProperties = {\n        transform: `scale(${scale}) rotate(${deg}deg)`,\n        transition: enableTransition ? 'transform .3s' : '',\n        marginLeft: `${offsetX}px`,\n        marginTop: `${offsetY}px`,\n      }\n      if (mode.value.name === Mode.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = '100%'\n      }\n      return style\n    })\n\n    function hide() {\n      unregisterEventListener()\n      emit('close')\n    }\n\n    function registerEventListener() {\n      const keydownHandler = rafThrottle((e: KeyboardEvent) => {\n        switch (e.code) {\n          // ESC\n          case EVENT_CODE.esc:\n            hide()\n            break\n          // SPACE\n          case EVENT_CODE.space:\n            toggleMode()\n            break\n          // LEFT_ARROW\n          case EVENT_CODE.left:\n            prev()\n            break\n          // UP_ARROW\n          case EVENT_CODE.up:\n            handleActions('zoomIn')\n            break\n          // RIGHT_ARROW\n          case EVENT_CODE.right:\n            next()\n            break\n          // DOWN_ARROW\n          case EVENT_CODE.down:\n            handleActions('zoomOut')\n            break\n        }\n      })\n      const mousewheelHandler = rafThrottle(\n        (e: WheelEvent | any /* TODO: wheelDelta is deprecated */) => {\n          const delta = e.wheelDelta ? e.wheelDelta : -e.detail\n          if (delta > 0) {\n            handleActions('zoomIn', {\n              zoomRate: 0.015,\n              enableTransition: false,\n            })\n          } else {\n            handleActions('zoomOut', {\n              zoomRate: 0.015,\n              enableTransition: false,\n            })\n          }\n        }\n      )\n\n      scopeEventListener.run(() => {\n        useEventListener(document, 'keydown', keydownHandler)\n        useEventListener(document, mousewheelEventName, mousewheelHandler)\n      })\n    }\n\n    function unregisterEventListener() {\n      scopeEventListener.stop()\n    }\n\n    function handleImgLoad() {\n      loading.value = false\n    }\n\n    function handleImgError(e: Event) {\n      loading.value = false\n      ;(e.target as HTMLImageElement).alt = t('el.image.error')\n    }\n\n    function handleMouseDown(e: MouseEvent) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return\n\n      const { offsetX, offsetY } = transform.value\n      const startX = e.pageX\n      const startY = e.pageY\n\n      const divLeft = wrapper.value.clientLeft\n      const divRight = wrapper.value.clientLeft + wrapper.value.clientWidth\n      const divTop = wrapper.value.clientTop\n      const divBottom = wrapper.value.clientTop + wrapper.value.clientHeight\n\n      const dragHandler = rafThrottle((ev: MouseEvent) => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY,\n        }\n      })\n      const removeMousemove = useEventListener(\n        document,\n        'mousemove',\n        dragHandler\n      )\n      useEventListener(document, 'mouseup', (evt) => {\n        const mouseX = evt.pageX\n        const mouseY = evt.pageY\n        if (\n          mouseX < divLeft ||\n          mouseX > divRight ||\n          mouseY < divTop ||\n          mouseY > divBottom\n        ) {\n          reset()\n        }\n        removeMousemove()\n      })\n\n      e.preventDefault()\n    }\n\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n      }\n    }\n\n    function toggleMode() {\n      if (loading.value) return\n\n      const modeNames = Object.keys(Mode)\n      const modeValues = Object.values(Mode)\n      const currentMode = mode.value.name\n      const index = modeValues.findIndex((i) => i.name === currentMode)\n      const nextIndex = (index + 1) % modeNames.length\n      mode.value = Mode[modeNames[nextIndex]]\n      reset()\n    }\n\n    function prev() {\n      if (isFirst.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value - 1 + len) % len\n    }\n\n    function next() {\n      if (isLast.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value + 1) % len\n    }\n\n    function handleActions(action: ImageViewerAction, options = {}) {\n      if (loading.value) return\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: 0.2,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      }\n      switch (action) {\n        case 'zoomOut':\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = parseFloat(\n              (transform.value.scale - zoomRate).toFixed(3)\n            )\n          }\n          break\n        case 'zoomIn':\n          transform.value.scale = parseFloat(\n            (transform.value.scale + zoomRate).toFixed(3)\n          )\n          break\n        case 'clockwise':\n          transform.value.deg += rotateDeg\n          break\n        case 'anticlockwise':\n          transform.value.deg -= rotateDeg\n          break\n      }\n      transform.value.enableTransition = enableTransition\n    }\n\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = img.value\n        if (!$img?.complete) {\n          loading.value = true\n        }\n      })\n    })\n\n    watch(index, (val) => {\n      reset()\n      emit('switch', val)\n    })\n\n    onMounted(() => {\n      registerEventListener()\n      // add tabindex then wrapper can be focusable via Javascript\n      // focus wrapper so arrow key can't cause inner scroll behavior underneath\n      wrapper.value?.focus?.()\n    })\n\n    return {\n      index,\n      wrapper,\n      img,\n      isSingle,\n      isFirst,\n      isLast,\n      currentImg,\n      imgStyle,\n      mode,\n      handleActions,\n      prev,\n      next,\n      hide,\n      toggleMode,\n      handleImgLoad,\n      handleImgError,\n      handleMouseDown,\n    }\n  },\n})\n</script>\n"],"names":["markRaw","ScaleToOriginal","defineComponent","Close","ArrowLeft","ArrowRight","ZoomOut","ZoomIn","RefreshLeft","imageViewerProps","imageViewerEmits","computed","EVENT_CODE","useEventListener","nextTick","watch"],"mappings":"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"}