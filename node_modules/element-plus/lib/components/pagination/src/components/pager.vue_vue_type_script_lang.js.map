{"version":3,"file":"pager.vue_vue_type_script_lang.js","sources":["../../../../../../../packages/components/pagination/src/components/pager.vue"],"sourcesContent":["<template>\n  <ul class=\"el-pager\" @click=\"onPagerClick\" @keyup.enter=\"onEnter\">\n    <li\n      v-if=\"pageCount > 0\"\n      :class=\"{ active: currentPage === 1, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === 1\"\n      tabindex=\"0\"\n    >\n      1\n    </li>\n    <li\n      v-if=\"showPrevMore\"\n      class=\"el-icon more btn-quickprev\"\n      :class=\"{ disabled }\"\n      @mouseenter=\"onMouseenter('left')\"\n      @mouseleave=\"quickPrevHover = false\"\n    >\n      <d-arrow-left v-if=\"quickPrevHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-for=\"pager in pagers\"\n      :key=\"pager\"\n      :class=\"{ active: currentPage === pager, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === pager\"\n      tabindex=\"0\"\n    >\n      {{ pager }}\n    </li>\n    <li\n      v-if=\"showNextMore\"\n      class=\"el-icon more btn-quicknext\"\n      :class=\"{ disabled }\"\n      @mouseenter=\"onMouseenter('right')\"\n      @mouseleave=\"quickNextHover = false\"\n    >\n      <d-arrow-right v-if=\"quickNextHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-if=\"pageCount > 1\"\n      :class=\"{ active: currentPage === pageCount, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === pageCount\"\n      tabindex=\"0\"\n    >\n      {{ pageCount }}\n    </li>\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, watchEffect } from 'vue'\nimport { MoreFilled, DArrowLeft, DArrowRight } from '@element-plus/icons-vue'\n\nconst paginationPagerProps = {\n  currentPage: {\n    type: Number,\n    default: 1,\n  },\n  pageCount: {\n    type: Number,\n    required: true,\n  },\n  pagerCount: {\n    type: Number,\n    default: 7,\n  },\n  disabled: Boolean,\n} as const\n\nexport default defineComponent({\n  name: 'ElPaginationPager',\n\n  components: {\n    DArrowLeft,\n    DArrowRight,\n    MoreFilled,\n  },\n  props: paginationPagerProps,\n  emits: ['change'],\n\n  setup(props, { emit }) {\n    const showPrevMore = ref(false)\n    const showNextMore = ref(false)\n    const quickPrevHover = ref(false)\n    const quickNextHover = ref(false)\n\n    const pagers = computed(() => {\n      const pagerCount = props.pagerCount\n      const halfPagerCount = (pagerCount - 1) / 2\n      const currentPage = Number(props.currentPage)\n      const pageCount = Number(props.pageCount)\n\n      let showPrevMore = false\n      let showNextMore = false\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore = true\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore = true\n        }\n      }\n      const array: number[] = []\n      if (showPrevMore && !showNextMore) {\n        const startPage = pageCount - (pagerCount - 2)\n        for (let i = startPage; i < pageCount; i++) {\n          array.push(i)\n        }\n      } else if (!showPrevMore && showNextMore) {\n        for (let i = 2; i < pagerCount; i++) {\n          array.push(i)\n        }\n      } else if (showPrevMore && showNextMore) {\n        const offset = Math.floor(pagerCount / 2) - 1\n        for (let i = currentPage - offset; i <= currentPage + offset; i++) {\n          array.push(i)\n        }\n      } else {\n        for (let i = 2; i < pageCount; i++) {\n          array.push(i)\n        }\n      }\n\n      return array\n    })\n\n    watchEffect(() => {\n      const halfPagerCount = (props.pagerCount - 1) / 2\n\n      showPrevMore.value = false\n      showNextMore.value = false\n\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true\n        }\n      }\n    })\n\n    function onMouseenter(direction: 'left' | 'right') {\n      if (props.disabled) return\n      if (direction === 'left') {\n        quickPrevHover.value = true\n      } else {\n        quickNextHover.value = true\n      }\n    }\n\n    function onEnter(e: UIEvent) {\n      const target = e.target as HTMLElement\n      if (\n        target.tagName.toLowerCase() === 'li' &&\n        Array.from(target.classList).includes('number')\n      ) {\n        const newPage = Number(target.textContent)\n        if (newPage !== props.currentPage) {\n          emit('change', newPage)\n        }\n      }\n    }\n\n    function onPagerClick(event: UIEvent) {\n      const target = event.target as HTMLElement\n      if (target.tagName.toLowerCase() === 'ul' || props.disabled) {\n        return\n      }\n\n      let newPage = Number(target.textContent)\n      const pageCount = props.pageCount\n      const currentPage = props.currentPage\n      const pagerCountOffset = props.pagerCount - 2\n      if (target.className.includes('more')) {\n        if (target.className.includes('quickprev')) {\n          newPage = currentPage - pagerCountOffset\n        } else if (target.className.includes('quicknext')) {\n          newPage = currentPage + pagerCountOffset\n        }\n      }\n      if (!isNaN(newPage)) {\n        if (newPage < 1) {\n          newPage = 1\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount\n        }\n      }\n      if (newPage !== currentPage) {\n        emit('change', newPage)\n      }\n    }\n\n    return {\n      showPrevMore,\n      showNextMore,\n      quickPrevHover,\n      quickNextHover,\n      pagers,\n\n      onMouseenter,\n      onPagerClick,\n      onEnter,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","DArrowLeft","DArrowRight","ref","computed"],"mappings":";;;;;;;AAsDA,0BAA0B,GAAG;;AAE7B,IAAI,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE;;WAEF,EAAE;;IAET;;YAEQ,EAAE;;IAEV,OAAO,GAAG;;UAEJ;EACR;aACaA;AACf,EAAE,IAAI,EAAE;;AAER,gBAAIC;iBACAC,oBAAW;;GAEZ;OACI,EAAE;OACF,EAAE,CAAC;OACH,CAAC,KAAK;;IAET,MAAM,YAAY,GAAGC,OAAG,CAAC;IACzB,MAAM;;IAEN,MAAM,SAASC;MACb,MAAM,aAAa,KAAK,CAAC;MACzB,MAAM,cAAc,GAAG,CAAC;MACxB,MAAM,WAAW,SAAS,CAAC;MAC3B,MAAM,SAAS,SAAS,CAAC,KAAK;;MAE9B,IAAI,aAAa,GAAG,KAAK,CAAC;MAC1B,IAAI,SAAS,aAAa,EAAE;QAC1B,IAAI,WAAW,aAAa,GAAG;UAC7B,gBAAgB,IAAI,CAAC;SACtB;;UAEC,aAAa,GAAG;;OAEnB;YACK,KAAK,GAAG,EAAE;UACZ,aAAa,IAAI,CAAC;QACpB;QACA,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;UAC1C,KAAK,CAAC,IAAI,CAAC,EAAE;;;QAGf,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG;UAClB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;SACf;aACI,IAAI,aAAa,IAAI,aAAa,EAAE;cACnC,MAAM;QACZ;UACE,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;SACf;aACI;QACL;UACE,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;SACf;;aAEI,KAAK,CAAC;;;YAGP,cAAc,GAAG,CAAC,KAAK,CAAC;kBAClB,CAAC;;MAEb;;UAEI;;;UAGA,YAAY;SACb;;MAEH,CAAC;aACM,YAAY;;eAEV;mBACI,KAAK,MAAM,EAAE;sBACV,CAAC,QAAQ;;QAEvB,cAAc,CAAC,KAAK,OAAO,CAAC;;;;;;QAM5B,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACvC,OAAO,KAAK,KAAK,CAAC;UACpB,IAAI,CAAC,UAAU,OAAO;SACvB;;;;;;QAMD,OAAO;OACR;MACD;YACM,SAAS,GAAG,KAAK,CAAC,SAAS;YAC3B,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;MACtC;UACI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACrC,IAAI,MAAM,UAAU,CAAC,QAAQ,CAAC;UAC5B,OAAO,GAAG,WAAW;;;;;MAKzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;QACnB,IAAI,OAAO,GAAG,CAAC,EAAE;UACf,OAAO,GAAG,CAAC,CAAC;SACb;;;;OAIF;MACD,IAAI,OAAO,KAAK,WAAW,EAAE;QAC3B,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC;OACzB;;WAEI;kBACO;kBACA;;MAEZ;MACA,MAAM;kBACM;kBACA;;;;;;;;"}