'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var index = require('../../tooltip/index.js');
require('../../../utils/util.js');
var popover = require('./popover.js');
var shared = require('@vue/shared');

const emits = ["update:visible", "after-enter", "after-leave"];
const NAME = "ElPopover";
var script = vue.defineComponent({
  name: NAME,
  components: {
    ElTooltip: index.ElTooltip
  },
  props: popover.usePopoverProps,
  emits,
  setup(props) {
    const tooltipRef = vue.ref(null);
    const popperRef = vue.computed(() => {
      var _a;
      return (_a = vue.unref(tooltipRef)) == null ? void 0 : _a.popperRef;
    });
    const width = vue.computed(() => {
      if (shared.isString(props.width)) {
        return props.width;
      }
      return `${props.width}px`;
    });
    const style = vue.computed(() => {
      return [
        {
          width: width.value
        },
        props.popperStyle
      ];
    });
    const kls = vue.computed(() => {
      return [
        { "el-popover--plain": !!props.content },
        "el-popover",
        props.popperClass
      ];
    });
    return {
      kls,
      style,
      tooltipRef,
      popperRef
    };
  }
});

exports["default"] = script;
//# sourceMappingURL=index.vue_vue_type_script_lang.js.map
