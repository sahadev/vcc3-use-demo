{"version":3,"file":"arrow.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/popper/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" class=\"el-popper__arrow\" data-popper-arrow=\"\" />\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  inject,\n  ref,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  unref,\n} from 'vue'\nimport { usePopperArrowProps } from './popper'\nimport { POPPER_CONTENT_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElPopperArrow',\n  props: usePopperArrowProps,\n  setup(props) {\n    const arrowRef = ref<HTMLSpanElement | null>(null)\n    const popperContentInjection = inject(\n      POPPER_CONTENT_INJECTION_KEY,\n      undefined\n    )!\n\n    watch(\n      () => props.arrowOffset,\n      (val) => {\n        popperContentInjection.arrowOffset.value = val\n      }\n    )\n\n    onMounted(() => {\n      popperContentInjection.arrowRef.value = unref(arrowRef)\n    })\n\n    onBeforeUnmount(() => {\n      popperContentInjection.arrowRef.value = null\n    })\n\n    return {\n      arrowRef,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","usePopperArrowProps","ref","watch","onBeforeUnmount"],"mappings":";;;;;;;;AAeA,aAAeA,mBAAe,CAAC;;AAE/B,EAAE,KAAK,EAAEC,0BAAmB;EAC1B,MAAM,KAAK,EAAE;IACX,MAAM,QAAQ,GAAGC,OAAG,CAAC;IACrB,MAAM;IACNC,UAAM,MAAM,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK;MACtC,sBAAsB,CAAC,WAAW,CAAC;MACnC,CAAC;iBACM,CAAC;;;IAGVC;MACE,sBAAsB,CAAC;MACvB,CAAC;WACI;MACL;;;;;;;"}