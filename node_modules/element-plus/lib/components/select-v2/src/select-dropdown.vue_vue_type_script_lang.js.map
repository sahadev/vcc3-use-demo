{"version":3,"file":"select-dropdown.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/select-v2/src/select-dropdown.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  inject,\n  ref,\n  renderSlot,\n  h,\n  withCtx,\n  withKeys,\n  withModifiers,\n} from 'vue'\nimport { getValueByPath, isUndefined, isObject } from '@element-plus/utils/util'\n// import { addResizeListener, removeResizeListener, ResizableElement } from '@element-plus/utils/resize-event'\nimport {\n  FixedSizeList,\n  DynamicSizeList,\n} from '@element-plus/components/virtual-list'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { OptionItemProps, Option } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: Array,\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props) {\n    const select = inject(selectV2InjectionKey) as any\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref(null)\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return (\n            getValueByPath(item, valueKey) === getValueByPath(target, valueKey)\n          )\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return (\n          getValueByPath(selected, valueKey) ===\n          getValueByPath(target, valueKey)\n        )\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      if (select.props.multiple) {\n        return contains(modelValue, target.value)\n      }\n      return isEqual(modelValue, target.value)\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    // computed\n    return {\n      select,\n      listProps,\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n\n      scrollToItem,\n      resetScrollTop,\n    }\n  },\n\n  render(_ctx, _cache) {\n    const {\n      $slots,\n\n      data,\n      listProps,\n      select,\n      isSized,\n      width,\n      // methods\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n    } = _ctx\n\n    const Comp = isSized ? FixedSizeList : DynamicSizeList\n\n    const {\n      props: selectProps,\n      onSelect,\n      onHover,\n      onKeyboardNavigate,\n      onKeyboardSelect,\n    } = select\n    const { height, modelValue, multiple } = selectProps\n\n    if (data.length === 0) {\n      return h(\n        'div',\n        {\n          class: 'el-select-dropdown',\n          style: {\n            width: `${width}px`,\n          },\n        },\n        $slots.empty?.()\n      )\n    }\n\n    const ListItem = withCtx((scoped: ItemProps<any>) => {\n      const { index, data } = scoped\n      const item = data[index]\n      // render group item which is not selectable.\n      if (data[index].type === 'Group') {\n        return h(GroupItem, {\n          item,\n          style: scoped.style,\n          height: isSized ? listProps.itemSize : listProps.estimatedSize,\n        })\n      }\n\n      const selected = isItemSelected(modelValue, item)\n      const itemDisabled = isItemDisabled(modelValue, selected)\n      // render option item which is selectable\n      return h(\n        OptionItem,\n        {\n          ...scoped,\n          selected,\n          disabled: item.disabled || itemDisabled,\n          created: !!item.created,\n          hovering: isItemHovering(index),\n          item,\n          onSelect,\n          onHover,\n        },\n        {\n          default: withCtx((props: OptionItemProps) => {\n            return renderSlot($slots, 'default', props, () => [\n              h('span', item.label),\n            ])\n          }),\n        }\n      )\n    })\n\n    const List = h(\n      Comp,\n      {\n        ref: 'listRef', // forwarded ref so that select can access the list directly\n        className: 'el-select-dropdown__list',\n        data,\n        height,\n        width,\n        total: data.length,\n        scrollbarAlwaysOn: selectProps.scrollbarAlwaysOn,\n        onKeydown: [\n          _cache[1] ||\n            (_cache[1] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('forward'),\n                ['stop', 'prevent']\n              ),\n              ['down']\n            )),\n          _cache[2] ||\n            (_cache[2] = withKeys(\n              withModifiers(\n                () => onKeyboardNavigate('backward'),\n                ['stop', 'prevent']\n              ),\n              ['up']\n            )),\n          _cache[3] ||\n            (_cache[3] = withKeys(\n              withModifiers(onKeyboardSelect, ['stop', 'prevent']),\n              ['enter']\n            )),\n\n          _cache[4] ||\n            (_cache[4] = withKeys(\n              withModifiers(\n                () => (select.expanded = false),\n                ['stop', 'prevent']\n              ),\n              ['esc']\n            )),\n          _cache[5] ||\n            (_cache[5] = withKeys(() => (select.expanded = false), ['tab'])),\n          // _cache[6] || (_cache[6] = () => {\n          //   console.log(11)\n          // }),\n        ],\n        ...listProps,\n      },\n      {\n        default: ListItem,\n      }\n    )\n    return h(\n      'div',\n      {\n        class: {\n          'is-multiple': multiple,\n          'el-select-dropdown': true,\n        },\n      },\n      [List]\n    )\n  },\n})\n</script>\n"],"names":["defineComponent","inject","selectV2InjectionKey","computed","isObject","getValueByPath","FixedSizeList","withCtx","withKeys"],"mappings":";;;;;;;;;;;;;;;;AAmBA,aAAeA,mBAAe,CAAC;;AAE/B,EAAE,KAAK,EAAE;;AAET,IAAI,aAAa,EAAE;AACnB,IAAI,KAAK,QAAQ;;AAEjB,EAAE,KAAK,CAAC,KAAK,EAAE;IACX,MAAM,MAAM,GAAGC,UAAM,CAACC;;IAEtB;IACA,MAAM;IACN,MAAM,SAAS,GAAGC;MAChB,WAAW;;UAEP;UACA;OACH;;QAEC,aAAa,EAAE;;OAEhB,CAAC;MACF,CAAC;IACH;MACE,MAAM;aACC,EAAE,EAAE,QAAQ;UACf;UACA,CAACC,gBAAS,MAAM,CAAC,EAAE;QACrB;;;QAGA;QACA,CAAC;;;;;OAKF,MAAM;QACL;QACA,OAAOC;;;UAGL,cAAc,GAAG;UACjB,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;;;MAG3B,OAAO;;UAEH,cAAc,GAAG;YACf,EAAE;aACD,QAAQ,IAAI,CAAC,QAAQ,KAAK,QAAQ,GAAG,aAAa,GAAG,CAAC,IAAI;;;;;MAKjE,IAAI,IAAI,EAAE;YACJ,CAAC,YAAY,CAAC;;MAEpB;UACI,iBAAiB,MAAM;YACrB;UACF,IAAI,EAAE;YACJ,CAAC,cAAc,EAAE,CAAC;;MAExB;IACF;;MAEE,SAAS;MACT,OAAO;aACA;MACP;MACA,cAAc;;;MAGd,cAAc;MACd;;QAEE,CAAC,IAAI,EAAE;QACP,EAAE,CAAC;UACD;YACE;;MAEN;;;MAGA,KAAK;;MAEL,cAAc;MACd,cAAc;YACR,CAAC;UACH,IAAI,GAAG,OAAO,GAAGC;;;;MAIrB,OAAO;MACP,kBAAkB;MAClB;QACE,MAAM,CAAC;;IAEX;;QAEI,KAAK;QACL;UACE;SACD;OACF,EAAE,CAAC,EAAE;;;MAGN,MAAM,EAAE,KAAK;MACb,MAAM,IAAI,GAAG;MACb,IAAI,KAAK,CAAC;;UAEN,IAAI;UACJ,KAAK,EAAE;;;;MAIX,MAAM,QAAQ,GAAG;MACjB;MACA;;QAEE;QACA;QACA;QACA;QACA;;QAEA,OAAO;OACR,EAAE;QACD,OAAO,EAAEC;UACP;;WAEC,CAAC,CAAC;;OAEN,CAAC;MACF,CAAC;UACG,IAAI;MACR,GAAG,EAAE;MACL,SAAS,EAAE;MACX,IAAI;MACJ,MAAM;MACN;;yBAEmB;MACnB;QACE;QACA;cACM,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,GAAGC;cACpB,CAAC,EAAE;cACH,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;;SAEtB;;MAEH;;;MAGA,KAAK,EAAE;QACL,aAAa,EAAE,QAAQ;QACvB,oBAAoB;OACrB;OACA,KAAK,CAAC,CAAC,CAAC;;;;;;"}