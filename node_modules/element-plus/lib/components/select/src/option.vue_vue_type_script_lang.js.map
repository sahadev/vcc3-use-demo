{"version":3,"file":"option.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/select/src/option.vue"],"sourcesContent":["<template>\n  <li\n    v-show=\"visible\"\n    class=\"el-select-dropdown__item\"\n    :class=\"{\n      selected: itemSelected,\n      'is-disabled': isDisabled,\n      hover: hover,\n    }\"\n    @mouseenter=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  reactive,\n} from 'vue'\nimport { useOption } from './useOption'\nimport type { SelectOptionProxy } from './token'\n\nexport default defineComponent({\n  name: 'ElOption',\n  componentName: 'ElOption',\n\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object],\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false,\n    })\n\n    const { currentLabel, itemSelected, isDisabled, select, hoverItem } =\n      useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = getCurrentInstance().proxy\n    const key = (vm as unknown as SelectOptionProxy).value\n    select.onOptionCreate(vm as unknown as SelectOptionProxy)\n\n    onBeforeUnmount(() => {\n      const { selected } = select\n      const selectedOptions = select.props.multiple ? selected : [selected]\n      const doesExist = select.cachedOptions.has(key)\n      const doesSelected = selectedOptions.some((item) => {\n        return item.value === (vm as unknown as SelectOptionProxy).value\n      })\n      // if option is not selected, remove it from cache\n      if (doesExist && !doesSelected) {\n        select.cachedOptions.delete(key)\n      }\n      select.onOptionDestroy(key)\n    })\n\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm, true)\n      }\n    }\n\n    return {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","reactive"],"mappings":";;;;;;;AA0BA,aAAeA,mBAAe,CAAC;AAC/B,EAAE,MAAM,UAAU;;AAElB,EAAE,KAAK,EAAE;IACL,KAAK,EAAE;MACL,QAAQ,MAAM;;KAEf;IACD,KAAK,EAAE;WACA,EAAE,OAAO;YACR,EAAE;;MAER,OAAO,EAAE,KAAK;KACf;;OAEE,CAAC,KAAK,EAAE;UACL,MAAM,GAAGC;;;;MAIb;MACA,KAAK,EAAE;MACP,CAAC;UACG,EAAE,YAAY,EAAE;UAChB,EAAE,OAAO;UACT,EAAE;UACF,GAAG,GAAG,EAAE;IACd;;MAEE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;MAC5B,MAAM,eAAe;;MAErB,MAAM,YAAY,GAAG,eAAe,CAAC;;OAEpC,CAAC;MACF,IAAI,aAAa,CAAC,YAAY,EAAE;QAC9B,MAAM,CAAC,cAAc,MAAM,CAAC,IAAI,CAAC;;MAEnC,MAAM,CAAC;MACP,CAAC;aACM,iBAAiB,GAAG;MAC3B,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC;QACpC,MAAM,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;;;;MAItC,YAAY;kBACA;MACZ;MACA,MAAM;;;MAGN,KAAK;MACL,iBAAiB;YACX;MACN;;;;;;"}