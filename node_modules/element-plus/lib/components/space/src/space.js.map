{"version":3,"file":"space.js","sources":["../../../../../../packages/components/space/src/space.ts"],"sourcesContent":["import {\n  defineComponent,\n  renderSlot,\n  createVNode,\n  createTextVNode,\n  isVNode,\n} from 'vue'\nimport { isString } from '@vue/shared'\nimport {\n  PatchFlags,\n  isFragment,\n  isValidElementNode,\n} from '@element-plus/utils/vnode'\nimport { isArray, isNumber } from '@element-plus/utils/util'\nimport {\n  buildProps,\n  componentSize,\n  definePropType,\n} from '@element-plus/utils/props'\nimport Item from './item.vue'\nimport { useSpace } from './use-space'\n\nimport type { VNode, StyleValue, ExtractPropTypes, VNodeChild } from 'vue'\nimport type { AlignItemsProperty } from 'csstype'\n\nexport const spaceProps = buildProps({\n  direction: {\n    type: String,\n    values: ['horizontal', 'vertical'],\n    default: 'horizontal',\n  },\n\n  class: {\n    type: definePropType<string | string[] | Record<string, boolean>>([\n      String,\n      Object,\n      Array,\n    ]),\n    default: '',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n    default: '',\n  },\n\n  alignment: {\n    type: definePropType<AlignItemsProperty>(String),\n    default: 'center',\n  },\n\n  prefixCls: {\n    type: String,\n  },\n\n  spacer: {\n    type: definePropType<VNodeChild>([Object, String, Number, Array]),\n    default: null,\n    validator: (val: unknown) => isVNode(val) || isNumber(val) || isString(val),\n  },\n\n  wrap: {\n    type: Boolean,\n    default: false,\n  },\n\n  fill: {\n    type: Boolean,\n    default: false,\n  },\n\n  fillRatio: {\n    type: Number,\n    default: 100,\n  },\n\n  size: {\n    type: [String, Array, Number],\n    values: componentSize,\n    validator: (val: unknown): val is [number, number] | number => {\n      return (\n        isNumber(val) ||\n        (isArray(val) && val.length === 2 && val.every((i) => isNumber(i)))\n      )\n    },\n  },\n} as const)\nexport type SpaceProps = ExtractPropTypes<typeof spaceProps>\n\nexport default defineComponent({\n  name: 'ElSpace',\n\n  props: spaceProps,\n\n  setup(props, { slots }) {\n    const { classes, containerStyle, itemStyle } = useSpace(props)\n\n    return () => {\n      const { spacer, prefixCls, direction } = props\n\n      const children = renderSlot(slots, 'default', { key: 0 }, () => [])\n      // retrieve the children out via a simple for loop\n      // the edge case here is that when users uses directives like <v-for>, <v-if>\n      // we need to go one layer deeper\n\n      if ((children.children ?? []).length === 0) return null\n\n      // loop the children, if current children is rendered via `renderList` or `<v-for>`\n      if (isArray(children.children)) {\n        let extractedChildren: VNode[] = []\n        children.children.forEach((child, loopKey) => {\n          if (isFragment(child)) {\n            if (isArray(child.children)) {\n              child.children.forEach((nested, key) => {\n                extractedChildren.push(\n                  createVNode(\n                    Item,\n                    {\n                      style: itemStyle.value,\n                      prefixCls,\n                      key: `nested-${key}`,\n                    },\n                    {\n                      default: () => [nested],\n                    },\n                    PatchFlags.PROPS | PatchFlags.STYLE,\n                    ['style', 'prefixCls']\n                  )\n                )\n              })\n            }\n            // if the current child is valid vnode, then append this current vnode\n            // to item as child node.\n          } else if (isValidElementNode(child)) {\n            extractedChildren.push(\n              createVNode(\n                Item,\n                {\n                  style: itemStyle.value,\n                  prefixCls,\n                  key: `LoopKey${loopKey}`,\n                },\n                {\n                  default: () => [child],\n                },\n                PatchFlags.PROPS | PatchFlags.STYLE,\n                ['style', 'prefixCls']\n              )\n            )\n          }\n        })\n\n        if (spacer) {\n          // track the current rendering index, when encounters the last element\n          // then no need to add a spacer after it.\n          const len = extractedChildren.length - 1\n          extractedChildren = extractedChildren.reduce<VNode[]>(\n            (acc, child, idx) => {\n              const children = [...acc, child]\n              if (idx !== len) {\n                children.push(\n                  createVNode(\n                    'span',\n                    // adding width 100% for vertical alignment,\n                    // when the spacer inherit the width from the\n                    // parent, this span's width was not set, so space\n                    // might disappear\n                    {\n                      style: [\n                        itemStyle.value,\n                        direction === 'vertical' ? 'width: 100%' : null,\n                      ],\n                      key: idx,\n                    },\n                    [\n                      // if spacer is already a valid vnode, then append it to the current\n                      // span element.\n                      // otherwise, treat it as string.\n                      isVNode(spacer)\n                        ? spacer\n                        : createTextVNode(spacer as string, PatchFlags.TEXT),\n                    ],\n                    PatchFlags.STYLE\n                  )\n                )\n              }\n              return children\n            },\n            []\n          )\n        }\n\n        // spacer container.\n        return createVNode(\n          'div',\n          {\n            class: classes.value,\n            style: containerStyle.value,\n          },\n          extractedChildren,\n          PatchFlags.STYLE | PatchFlags.CLASS\n        )\n      }\n\n      return children.children\n    }\n  },\n})\n"],"names":["buildProps","definePropType","isVNode","isNumber","isString","componentSize","isArray","defineComponent","useSpace","renderSlot","isFragment","createVNode","Item","PatchFlags","isValidElementNode","createTextVNode"],"mappings":"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"}