{"version":3,"file":"panel-time-pick.vue_vue_type_script_lang.js","sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" class=\"el-time-panel\">\n      <div\n        class=\"el-time-panel__content\"\n        :class=\"{ 'has-seconds': showSeconds }\"\n      >\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"parsedValue\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div class=\"el-time-panel__footer\">\n        <button\n          type=\"button\"\n          class=\"el-time-panel__btn cancel\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"el-time-panel__btn confirm\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, inject } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { useLocale } from '@element-plus/hooks'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: {\n    TimeSpinner,\n  },\n\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: undefined,\n    },\n    datetimeRole: {\n      type: String,\n    },\n    parsedValue: {\n      type: [Object, String] as PropType<string | Dayjs>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    // data\n    const selectionRange = ref([0, 2])\n    const oldValue = useOldValue(props)\n    // computed\n    const transitionName = computed(() => {\n      return props.actualVisible === undefined ? 'el-zoom-in-top' : ''\n    })\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n    // method\n    const isValidValue = (_date: Dayjs) => {\n      const parsedDate = dayjs(_date).locale(lang.value)\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate.isSame(result)\n    }\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return\n      ctx.emit('pick', props.parsedValue, visible)\n    }\n    const handleChange = (_date: Dayjs) => {\n      // visible avoids edge cases, when use scrolls during panel closing animation\n      if (!props.visible) {\n        return\n      }\n      const result = getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', result, true)\n    }\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end)\n      selectionRange.value = [start, end]\n    }\n\n    const changeSelectionRange = (step: number) => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : [])\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      timePickerOptions['start_emitSelectRange'](mapping[next])\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        timePickerOptions['start_scrollDown'](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const getRangeAvailableTime = (date: Dayjs) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      let result = date\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), props.datetimeRole)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              props.datetimeRole\n            )\n          } else {\n            availableArr = method(props.datetimeRole)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            result = result[_](availableArr[0])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs) => {\n      if (!value) return null\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs) => {\n      if (!value) return null\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value)\n    }\n\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds)\n\n    return {\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","TimeSpinner","dayjs","EVENT_CODE","inject"],"mappings":"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"}