{"version":3,"file":"panel-time-range.vue_vue_type_script_lang.js","sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div v-if=\"actualVisible\" class=\"el-time-range-picker el-picker-panel\">\n    <div class=\"el-time-range-picker__content\">\n      <div class=\"el-time-range-picker__cell\">\n        <div class=\"el-time-range-picker__header\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"{ 'has-seconds': showSeconds, 'is-arrow': arrowControl }\"\n          class=\"el-time-range-picker__body el-time-panel__content\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"minDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div class=\"el-time-range-picker__cell\">\n        <div class=\"el-time-range-picker__header\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"{ 'has-seconds': showSeconds, 'is-arrow': arrowControl }\"\n          class=\"el-time-range-picker__body el-time-panel__content\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"maxDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"el-time-panel__footer\">\n      <button\n        type=\"button\"\n        class=\"el-time-panel__btn cancel\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"el-time-panel__btn confirm\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, inject } from 'vue'\nimport dayjs from 'dayjs'\nimport union from 'lodash/union'\nimport { useLocale } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\nexport default defineComponent({\n  components: { TimeSpinner },\n\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array] as PropType<Array<Dayjs>>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const minDate = computed(() => props.parsedValue[0])\n    const maxDate = computed(() => props.parsedValue[1])\n    const oldValue = useOldValue(props)\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, null)\n    }\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n\n    const minSelectableRange = ref([])\n    const maxSelectableRange = ref([])\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit('pick', [minDate.value, maxDate.value], visible)\n    }\n\n    const handleMinChange = (date) => {\n      handleChange(date.millisecond(0), maxDate.value)\n    }\n    const handleMaxChange = (date) => {\n      handleChange(minDate.value, date.millisecond(0))\n    }\n\n    const isValidValue = (_date: Dayjs[]) => {\n      const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n    }\n\n    const handleChange = (_minDate, _maxDate) => {\n      // todo getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', [_minDate, _maxDate], true)\n    }\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value\n    })\n\n    const selectionRange = ref([0, 2])\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'min')\n      selectionRange.value = [start, end]\n    }\n\n    const offset = computed(() => (showSeconds.value ? 11 : 8))\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'max')\n      selectionRange.value = [start + offset.value, end + offset.value]\n    }\n\n    const changeSelectionRange = (step) => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      const half = list.length / 2\n      if (next < half) {\n        timePickerOptions['start_emitSelectRange'](mapping[next])\n      } else {\n        timePickerOptions['end_emitSelectRange'](mapping[next - half])\n      }\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n        timePickerOptions[`${role}_scrollDown`](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const nextDisable = isStart\n        ? makeSelectRange(compareHour + 1, 23)\n        : makeSelectRange(0, compareHour - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      if (hour !== compareHour) {\n        return defaultDisable\n      }\n      const compareMinute = compareDate.minute()\n      const nextDisable = isStart\n        ? makeSelectRange(compareMinute + 1, 59)\n        : makeSelectRange(0, compareMinute - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds\n        ? disabledSeconds(hour, minute, role)\n        : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const compareMinute = compareDate.minute()\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable\n      }\n      const compareSecond = compareDate.second()\n      const nextDisable = isStart\n        ? makeSelectRange(compareSecond + 1, 59)\n        : makeSelectRange(0, compareSecond - 1)\n      return union(defaultDisable, nextDisable)\n    }\n\n    const getRangeAvailableTime = (dates: Array<Dayjs>) => {\n      return dates.map((_, index) =>\n        getRangeAvailableTimeEach(\n          dates[0],\n          dates[1],\n          index === 0 ? 'start' : 'end'\n        )\n      )\n    }\n\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_)\n\n    const getRangeAvailableTimeEach = (\n      startDate: Dayjs,\n      endDate: Dayjs,\n      role\n    ) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      const isStart = role === 'start'\n      let result = isStart ? startDate : endDate\n      const compareDate = isStart ? endDate : startDate\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), role, compareDate)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n          } else {\n            availableArr = method(role, compareDate)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            const pos = isStart ? 0 : availableArr.length - 1\n            result = result[_](availableArr[pos])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => dayjs(_, props.format).locale(lang.value))\n      }\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => _.format(props.format))\n      }\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map((_) => dayjs(_).locale(lang.value))\n      }\n      const defaultDay = dayjs(defaultValue).locale(lang.value)\n      return [defaultDay, defaultDay.add(60, 'm')]\n    }\n\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n\n    return {\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","TimeSpinner","computed","ref","EVENT_CODE","union"],"mappings":"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"}