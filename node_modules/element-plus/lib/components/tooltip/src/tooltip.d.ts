import type { ExtractPropTypes, PropType } from 'vue';
declare const triggers: readonly ["hover", "focus", "click", "contextmenu"];
export declare type Trigger = typeof triggers[number];
export declare const useTooltipContentProps: {
    content: import("element-plus/es/utils/props").BuildPropReturn<StringConstructor, string | (() => string) | undefined, unknown, unknown, unknown>;
    rawContent: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    persistent: BooleanConstructor;
    ariaLabel: StringConstructor;
    visible: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<boolean | null>, (() => null) | null | undefined, unknown, unknown, unknown>;
    transition: import("element-plus/es/utils/props").BuildPropReturn<StringConstructor, string | (() => string) | undefined, unknown, unknown, unknown>;
    teleported: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    style: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<import("vue").StyleValue>, string | import("vue").CSSProperties | (() => string) | (() => import("vue").CSSProperties) | (() => import("vue").StyleValue[]) | undefined, unknown, unknown, unknown>;
    className: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]>, string | (() => string) | (() => {
        [x: string]: any;
    }) | (() => (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]) | undefined, unknown, unknown, unknown>;
    effect: import("element-plus/es/utils/props").BuildPropReturn<StringConstructor, string | (() => string) | undefined, unknown, unknown, unknown>;
    enterable: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    pure: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    popperClass: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]>, string | (() => string) | (() => {
        [x: string]: any;
    }) | (() => (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | (string | {
        [x: string]: any;
    } | any)[])[])[])[])[])[])[])[])[])[])[]) | undefined, unknown, unknown, unknown>;
    popperStyle: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<import("vue").StyleValue>, string | import("vue").CSSProperties | (() => string) | (() => import("vue").CSSProperties) | (() => import("vue").StyleValue[]) | undefined, unknown, unknown, unknown>;
    referenceEl: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<HTMLElement>, HTMLElement | (() => HTMLElement) | undefined, unknown, unknown, unknown>;
    stopPopperMouseEvent: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    zIndex: NumberConstructor;
    boundariesPadding: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => number & {}) | (() => number) | ((new (...args: any[]) => number & {}) | (() => number))[], 0 | (() => 0) | undefined, false, unknown, unknown>;
    fallbackPlacements: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => import("element-plus/es/components/popper").Placement[]) | (() => import("element-plus/es/components/popper").Placement[]) | ((new (...args: any[]) => import("element-plus/es/components/popper").Placement[]) | (() => import("element-plus/es/components/popper").Placement[]))[], (() => never[]) | undefined, false, unknown, unknown>;
    gpuAcceleration: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => import("element-plus/es/utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("element-plus/es/utils/props").BuildPropType<BooleanConstructor, unknown, unknown>) | ((new (...args: any[]) => import("element-plus/es/utils/props").BuildPropType<BooleanConstructor, unknown, unknown> & {}) | (() => import("element-plus/es/utils/props").BuildPropType<BooleanConstructor, unknown, unknown>))[], true | (() => true) | undefined, false, unknown, unknown>;
    offset: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => number & {}) | (() => number) | ((new (...args: any[]) => number & {}) | (() => number))[], 12 | (() => 12) | undefined, false, unknown, unknown>;
    placement: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => import("element-plus/es/utils/props").BuildPropType<StringConstructor, import("element-plus/es/components/popper").Placement, unknown> & {}) | (() => import("element-plus/es/utils/props").BuildPropType<StringConstructor, import("element-plus/es/components/popper").Placement, unknown>) | ((new (...args: any[]) => import("element-plus/es/utils/props").BuildPropType<StringConstructor, import("element-plus/es/components/popper").Placement, unknown> & {}) | (() => import("element-plus/es/utils/props").BuildPropType<StringConstructor, import("element-plus/es/components/popper").Placement, unknown>))[], "bottom" | (() => "bottom") | undefined, false, unknown, unknown>;
    popperOptions: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => Partial<import("element-plus/es/components/popper").Options>) | (() => Partial<import("element-plus/es/components/popper").Options>) | ((new (...args: any[]) => Partial<import("element-plus/es/components/popper").Options>) | (() => Partial<import("element-plus/es/components/popper").Options>))[], (() => {}) | undefined, false, unknown, unknown>;
    strategy: import("element-plus/es/utils/props").BuildPropReturn<(new (...args: any[]) => import("element-plus/es/utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("element-plus/es/utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>) | ((new (...args: any[]) => import("element-plus/es/utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown> & {}) | (() => import("element-plus/es/utils/props").BuildPropType<StringConstructor, "fixed" | "absolute", unknown>))[], "absolute" | (() => "absolute") | undefined, false, unknown, unknown>;
    showAfter: import("element-plus/es/utils/props").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    hideAfter: import("element-plus/es/utils/props").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
};
export declare const useTooltipTriggerProps: {
    disabled: BooleanConstructor;
    trigger: {
        type: PropType<"click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[]>;
        default: string;
    };
    virtualRef: import("element-plus/es/utils/props").BuildPropReturn<import("element-plus/es/utils/props").PropWrapper<import("element-plus/es/components/popper").Measurable>, unknown, unknown, unknown, unknown>;
    virtualTriggering: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, unknown, unknown, unknown, unknown>;
};
export declare const useTooltipProps: {
    openDelay: import("element-plus/es/utils/props").BuildPropReturn<NumberConstructor, number | (() => number) | undefined, unknown, unknown, unknown>;
    visibleArrow: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
    hideAfter: import("element-plus/es/utils/props").BuildPropReturn<NumberConstructor, number | (() => number) | undefined, unknown, unknown, unknown>;
    showArrow: import("element-plus/es/utils/props").BuildPropReturn<BooleanConstructor, boolean | (() => false) | (() => true) | undefined, unknown, unknown, unknown>;
};
export declare type ElTooltipContentProps = ExtractPropTypes<typeof useTooltipContentProps>;
export declare type ElTooltipTriggerProps = ExtractPropTypes<typeof useTooltipTriggerProps>;
export declare type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> & ElTooltipContentProps & ElTooltipTriggerProps;
export {};
