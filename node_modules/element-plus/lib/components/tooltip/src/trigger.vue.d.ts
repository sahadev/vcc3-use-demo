declare const _default: import("vue").DefineComponent<{
    disabled: BooleanConstructor;
    trigger: {
        type: import("vue").PropType<"click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[]>;
        default: string;
    };
    virtualRef: import("../../../utils/props").BuildPropReturn<import("../../../utils/props").PropWrapper<import("element-plus/es/components/popper").Measurable>, unknown, unknown, unknown, unknown>;
    virtualTriggering: import("../../../utils/props").BuildPropReturn<BooleanConstructor, unknown, unknown, unknown, unknown>;
}, {
    onBlur: (event: Event) => void;
    onContextMenu: (event: Event) => void;
    onFocus: (event: Event) => void;
    onMouseenter: (event: Event) => void;
    onMouseleave: (event: Event) => void;
    onMousedown: (event: Event) => void;
    onKeydown: (event: KeyboardEvent) => void;
    open: import("vue").Ref<boolean>;
    id: import("vue").Ref<string>;
    triggerRef: import("vue").Ref<{
        forwardRef: HTMLElement;
    } | null>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disabled?: unknown;
    trigger?: unknown;
    virtualRef?: unknown;
    virtualTriggering?: unknown;
} & {
    disabled: boolean;
    trigger: "click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[];
} & {
    virtualRef?: import("element-plus/es/components/popper").Measurable | undefined;
    virtualTriggering?: import("../../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
}>, {
    disabled: boolean;
    trigger: "click" | "contextmenu" | "focus" | "hover" | ("click" | "contextmenu" | "focus" | "hover")[];
    virtualRef: import("element-plus/es/components/popper").Measurable;
    virtualTriggering: import("../../../utils/props").BuildPropType<BooleanConstructor, unknown, unknown>;
}>;
export default _default;
