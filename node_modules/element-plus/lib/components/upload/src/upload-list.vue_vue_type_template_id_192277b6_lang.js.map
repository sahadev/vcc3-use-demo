{"version":3,"file":"upload-list.vue_vue_type_template_id_192277b6_lang.js","sources":["../../../../../../packages/components/upload/src/upload-list.vue?vue&type=template&id=192277b6&lang.js"],"sourcesContent":["<template>\n  <transition-group\n    tag=\"ul\"\n    :class=\"[\n      'el-upload-list',\n      'el-upload-list--' + listType,\n      { 'is-disabled': disabled },\n    ]\"\n    name=\"el-list\"\n  >\n    <li\n      v-for=\"file in files\"\n      :key=\"file.uid || file\"\n      :class=\"[\n        'el-upload-list__item',\n        'is-' + file.status,\n        focusing ? 'focusing' : '',\n      ]\"\n      tabindex=\"0\"\n      @keydown.delete=\"!disabled && handleRemove(file)\"\n      @focus=\"focusing = true\"\n      @blur=\"focusing = false\"\n      @click=\"onFileClicked\"\n    >\n      <slot :file=\"file\">\n        <img\n          v-if=\"\n            file.status !== 'uploading' &&\n            ['picture-card', 'picture'].includes(listType)\n          \"\n          class=\"el-upload-list__item-thumbnail\"\n          :src=\"file.url\"\n          alt=\"\"\n        />\n        <a class=\"el-upload-list__item-name\" @click=\"handleClick(file)\">\n          <el-icon class=\"el-icon--document\"><document /></el-icon>\n          {{ file.name }}\n        </a>\n        <label class=\"el-upload-list__item-status-label\">\n          <el-icon\n            v-if=\"listType === 'text'\"\n            class=\"el-icon--upload-success el-icon--circle-check\"\n          >\n            <circle-check />\n          </el-icon>\n          <el-icon\n            v-else-if=\"['picture-card', 'picture'].includes(listType)\"\n            class=\"el-icon--upload-success el-icon--check\"\n          >\n            <check />\n          </el-icon>\n        </label>\n        <el-icon\n          v-if=\"!disabled\"\n          class=\"el-icon--close\"\n          @click=\"handleRemove(file)\"\n        >\n          <close />\n        </el-icon>\n        <!-- Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn-->\n        <!-- This is a bug which needs to be fixed -->\n        <!-- TODO: Fix the incorrect navigation interaction -->\n        <i v-if=\"!disabled\" class=\"el-icon--close-tip\">{{\n          t('el.upload.deleteTip')\n        }}</i>\n        <el-progress\n          v-if=\"file.status === 'uploading'\"\n          :type=\"listType === 'picture-card' ? 'circle' : 'line'\"\n          :stroke-width=\"listType === 'picture-card' ? 6 : 2\"\n          :percentage=\"+file.percentage\"\n          style=\"margin-top: 0.5rem\"\n        />\n        <span\n          v-if=\"listType === 'picture-card'\"\n          class=\"el-upload-list__item-actions\"\n        >\n          <span\n            class=\"el-upload-list__item-preview\"\n            @click=\"handlePreview(file)\"\n          >\n            <el-icon class=\"el-icon--zoom-in\"><zoom-in /></el-icon>\n          </span>\n          <span\n            v-if=\"!disabled\"\n            class=\"el-upload-list__item-delete\"\n            @click=\"handleRemove(file)\"\n          >\n            <el-icon class=\"el-icon--delete\"><delete /></el-icon>\n          </span>\n        </span>\n      </slot>\n    </li>\n  </transition-group>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { ElIcon } from '@element-plus/components/icon'\nimport {\n  Document,\n  Delete,\n  Close,\n  ZoomIn,\n  Check,\n  CircleCheck,\n} from '@element-plus/icons-vue'\nimport { useLocale } from '@element-plus/hooks'\nimport ElProgress from '@element-plus/components/progress'\n\nimport type { PropType } from 'vue'\nimport type { UploadFile } from './upload.type'\n\nexport default defineComponent({\n  name: 'ElUploadList',\n  components: {\n    ElProgress,\n    ElIcon,\n    Document,\n    Delete,\n    Close,\n    ZoomIn,\n    Check,\n    CircleCheck,\n  },\n  props: {\n    files: {\n      type: Array as PropType<UploadFile[]>,\n      default: () => [] as File[],\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    handlePreview: {\n      type: Function as PropType<(file: UploadFile) => void>,\n      default: () => NOOP,\n    },\n    listType: {\n      type: String as PropType<'picture' | 'picture-card' | 'text'>,\n      default: 'text',\n    },\n  },\n  emits: ['remove'],\n  setup(props, { emit }) {\n    const { t } = useLocale()\n\n    const handleClick = (file: UploadFile) => {\n      props.handlePreview(file)\n    }\n\n    const onFileClicked = (e: Event) => {\n      ;(e.target as HTMLElement).focus()\n    }\n\n    const handleRemove = (file: UploadFile) => {\n      emit('remove', file)\n    }\n    return {\n      focusing: ref(false),\n      handleClick,\n      handleRemove,\n      onFileClicked,\n      t,\n    }\n  },\n})\n</script>\n"],"names":["_renderSlot","_createTextVNode","_withCtx"],"mappings":";;;;;;;;;;;;;EA8D4B;;;;EAYlB;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA9DO,WAAW;;;;;;UAMtB,QAAQ;UACP,SAAO;;UAEPA;iBACK,8FAAe;;;;;;;;;;8BASP;uBACN;;;;;cAEgCC,uBAAO;;;;;;;;yDAExC;;;eAIK;;;;;;;;;;8DAM0C;;;;;;;;;;;;;;;;kBASjD,OAAK,aAAE,iBAAY;;;;;;;;;;;2BAOJC;;;kBAIL;;;;;;yBAIX;;;;;;;;;;;;;;;;;;;;"}