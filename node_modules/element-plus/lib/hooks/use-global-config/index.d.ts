import type { MaybeRef } from '@vueuse/core';
import type { Ref, App } from 'vue';
import type { ConfigProviderContext } from 'element-plus/es/tokens';
export declare function useGlobalConfig<K extends keyof ConfigProviderContext>(key: K): Ref<ConfigProviderContext[K]>;
export declare function useGlobalConfig(): Ref<ConfigProviderContext>;
export declare const provideGlobalConfig: (config: MaybeRef<ConfigProviderContext>, app?: App<any> | undefined) => import("vue").ComputedRef<{
    readonly locale?: unknown;
    readonly size?: unknown;
    readonly button?: unknown;
    readonly message?: unknown;
    readonly zIndex?: unknown;
} & {} & {
    button?: import("../..").ButtonConfigContext | undefined;
    size?: import("../../utils/props").BuildPropType<StringConstructor, "small" | "default" | "large", unknown> | undefined;
    locale?: import("../../locale").Language | undefined;
    message?: import("../..").MessageConfigContext | undefined;
    zIndex?: number | undefined;
}> | undefined;
