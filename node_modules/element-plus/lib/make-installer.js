'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
require('./hooks/index.js');
var util = require('./utils/util.js');
var popupManager = require('./utils/popup-manager.js');
var version = require('./version.js');
var index = require('./hooks/use-global-config/index.js');

const INSTALLED_KEY = Symbol("INSTALLED_KEY");
const makeInstaller = (components = []) => {
  const install = (app, options = {}) => {
    if (app[INSTALLED_KEY])
      return;
    app[INSTALLED_KEY] = true;
    components.forEach((c) => app.use(c));
    index.provideGlobalConfig(options, app);
    vue.watch(() => vue.unref(options).zIndex, () => {
      const zIndex = vue.unref(options).zIndex;
      if (util.isNumber(zIndex))
        popupManager.PopupManager.globalInitialZIndex = zIndex;
    }, { immediate: true });
  };
  return {
    version: version.version,
    install
  };
};

exports.makeInstaller = makeInstaller;
//# sourceMappingURL=make-installer.js.map
