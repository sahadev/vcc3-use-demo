{"version":3,"file":"make-installer.js","sources":["../../../packages/element-plus/make-installer.ts"],"sourcesContent":["import { watch, unref } from 'vue'\nimport { provideGlobalConfig } from '@element-plus/hooks'\nimport { isNumber } from '@element-plus/utils/util'\nimport { PopupManager } from '@element-plus/utils/popup-manager'\nimport { version } from './version'\nimport type { App, Plugin } from 'vue'\nimport type { ConfigProviderContext } from '@element-plus/tokens'\n\nconst INSTALLED_KEY = Symbol('INSTALLED_KEY')\n\nexport const makeInstaller = (components: Plugin[] = []) => {\n  const install = (app: App, options: ConfigProviderContext = {}) => {\n    if (app[INSTALLED_KEY]) return\n\n    app[INSTALLED_KEY] = true\n    components.forEach((c) => app.use(c))\n    provideGlobalConfig(options, app)\n\n    watch(\n      () => unref(options).zIndex,\n      () => {\n        const zIndex = unref(options).zIndex\n        if (isNumber(zIndex)) PopupManager.globalInitialZIndex = zIndex\n      },\n      { immediate: true }\n    )\n  }\n\n  return {\n    version,\n    install,\n  }\n}\n"],"names":["provideGlobalConfig","watch","unref","isNumber","PopupManager","version"],"mappings":";;;;;;;;;;;AAKA,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAClC,MAAC,aAAa,GAAG,CAAC,UAAU,GAAG,EAAE,KAAK;AAClD,EAAE,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,KAAK;AACzC,IAAI,IAAI,GAAG,CAAC,aAAa,CAAC;AAC1B,MAAM,OAAO;AACb,IAAI,GAAG,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;AAC9B,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,IAAIA,yBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACtC,IAAIC,SAAK,CAAC,MAAMC,SAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM;AAC7C,MAAM,MAAM,MAAM,GAAGA,SAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;AAC3C,MAAM,IAAIC,aAAQ,CAAC,MAAM,CAAC;AAC1B,QAAQC,yBAAY,CAAC,mBAAmB,GAAG,MAAM,CAAC;AAClD,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5B,GAAG,CAAC;AACJ,EAAE,OAAO;AACT,aAAIC,eAAO;AACX,IAAI,OAAO;AACX,GAAG,CAAC;AACJ;;;;"}